{"version":3,"sources":["AdminComponents/store/sales/SalesTable.js","AdminComponents/store/sales/AddSales.js","AdminComponents/store/sales/Sales.js","AdminComponents/shared/TablePagination.js"],"names":["useStyles2","makeStyles","table","width","CustomPaginationActionsTable","data","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","Math","min","length","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","currentCurrency","TableBody","colSpan","slice","map","row","moment","date","format","to","_id","name","totalCost","TableFooter","TablePagination","rowsPerPageOptions","label","value","count","SelectProps","inputProps","native","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","TablePaginationActions","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","Slide","direction","CustomizedDialogs","student","setstudent","open","setOpen","totalprice","amount","setamount","buyitems","handleChangeDiscount","items","loading","handleSetitem","handleAddItem","handleChangeQty","handleAddSale","students","setstudents","handleClose","useEffect","axios","get","then","res","Dialog","fullScreen","onClose","TransitionComponent","aria-labelledby","AppBar","color","Toolbar","Typography","variant","IconButton","edge","onClick","action","onChange","e","defaultValue","hidden","userID","surname","disabled","type","scope","i","rows","readOnly","a","y","qty","rate","discount","toFixed","autoFocus","Sales","setdata","setopen","setname","setitems","setloading","history","useHistory","id","itemID","setbuyitems","calculateAmount","amnt","Number","reduce","sum","obj","console","log","placeholder","preventDefault","post","amountPaid","seller","error","errorAlert","alert","push","doc","catch","err","index","item","find","price","useStyles1","root","flexShrink","useTheme","ceil","max"],"mappings":"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","file":"static/js/170.8de09836.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TablePaginationActions from \"../../shared/TablePagination\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { currentCurrency } from \"../../../utils\";\n\nconst useStyles2 = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nexport default function CustomPaginationActionsTable({ data }) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, data?.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell align=\"left\">Receipt</TableCell>\n            <TableCell align=\"left\">Student</TableCell>\n            <TableCell align=\"left\">Amount ({currentCurrency()})</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data?.length <= 0 ? (\n            <TableRow>\n              <TableCell colSpan={4} className=\"text-center my-5\">\n                No data\n              </TableCell>\n            </TableRow>\n          ) : (\n            <>\n              {(rowsPerPage > 0\n                ? data?.slice(\n                    page * rowsPerPage,\n                    page * rowsPerPage + rowsPerPage\n                  )\n                : data\n              )?.map((row) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"left\">\n                    {moment(row?.date)?.format(\"D MMMM YYYY\")}\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    {\" \"}\n                    <Link to={`/store/sales/receipt/${row?._id}`}>\n                      {row?._id}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"left\">{row?.name}</TableCell>\n                  <TableCell align=\"left\">{row?.totalCost}</TableCell>\n                </TableRow>\n              ))}\n            </>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            {data?.length > 5 && (\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\n                count={data?.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            )}\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"../../../store/axios\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CustomizedDialogs({\n  student,\n  setstudent,\n  open,\n  setOpen,\n  totalprice,\n  amount,\n  setamount,\n  buyitems,\n  handleChangeDiscount,\n  items,\n  loading,\n  handleSetitem,\n  handleAddItem,\n  handleChangeQty,\n  handleAddSale,\n}) {\n  const [students, setstudents] = useState([]);\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    axios.get(\"/students\").then((res) => {\n      setstudents(res.data);\n    });\n  }, []);\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n      className=\"content__container\"\n      aria-labelledby=\"customized-dialog-title\"\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Create New Sale\n          </Typography>\n\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"mt-3 px-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-6   mb-3\">\n            <label className=\" form-label\">Student</label>\n            <select\n              value={student}\n              onChange={(e) => setstudent(e.target.value)}\n              name=\"student\"\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n            >\n              <option defaultValue hidden>\n                select\n              </option>\n              {students?.length > 0 ? (\n                students?.map((e) => (\n                  <option key={e._id} value={e.userID}>\n                    {e.name} {e?.surname}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No student yet</option>\n              )}\n            </select>\n          </div>\n          <div className=\" col-sm-6   mb-3\">\n            <label className=\" form-label\">Amount Paid</label>\n            <input\n              name=\"employmentdate\"\n              value={amount}\n              onChange={(e) => setamount(e.target.value)}\n              type=\"number\"\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n        <table className=\"table table-borderless\">\n          <thead className=\"table-dark\">\n            <tr>\n              <th colSpan={3}>Item Details</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Rate</th>\n              <th scope=\"col\">Discount (%)</th>\n              <th scope=\"col\">Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {buyitems &&\n              buyitems.map((e, i) => (\n                <tr key={i}>\n                  <th colSpan={3}>\n                    <textarea\n                      className=\"form-control\"\n                      name=\"item\"\n                      rows=\"2\"\n                      value={e.name}\n                      readOnly\n                    ></textarea>\n                    <select\n                      defaultValue=\"item\"\n                      onChange={(a) => handleSetitem(a.target.value, i)}\n                      name=\"item\"\n                      className=\"form-select\"\n                      aria-label=\"Default select example\"\n                    >\n                      <option defaultValue hidden>\n                        select\n                      </option>\n                      {items?.length > 0 ? (\n                        items?.map((y) => (\n                          <option key={y._id} value={y?._id}>\n                            {y.name}\n                          </option>\n                        ))\n                      ) : (\n                        <option disabled>No item yet</option>\n                      )}\n                    </select>\n                  </th>\n                  <th scope=\"col\">\n                    <input\n                      name=\"quantity\"\n                      className=\"form-control\"\n                      onChange={(e) => handleChangeQty(e.target.value, i)}\n                      value={e.qty}\n                      type=\"number\"\n                    />\n                  </th>\n                  <th scope=\"col\">\n                    <input\n                      name=\"rate\"\n                      readOnly\n                      value={e.rate}\n                      className=\"form-control\"\n                      type=\"number\"\n                    />\n                  </th>\n                  <th scope=\"col\">\n                    <input\n                      name=\"discount\"\n                      className=\"form-control\"\n                      value={e.discount}\n                      onChange={(e) => handleChangeDiscount(e.target.value, i)}\n                      type=\"number\"\n                    />\n                  </th>\n                  <th scope=\"col\">\n                    <input\n                      name=\"amount\"\n                      className=\"form-control\"\n                      readOnly\n                      value={e.amount}\n                      type=\"number\"\n                    />\n                  </th>\n                </tr>\n              ))}\n\n            <tr>\n              <button onClick={handleAddItem} className=\"btn blue__btn\">\n                + Add another item\n              </button>\n            </tr>\n            <tr>\n              <th colSpan={5}></th>\n              <th colSpan={2}>\n                <div className=\"d-flex justify-content-between\">\n                  <span>Items Total Price</span>\n                  <span>{totalprice}</span>\n                </div>\n              </th>\n            </tr>\n            <tr>\n              <th colSpan={5}></th>\n              <th colSpan={2}>\n                <div className=\"d-flex justify-content-between\">\n                  <span>Balance </span>\n                  <span>{(amount - totalprice).toFixed(2)}</span>\n                </div>\n              </th>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"d-flex justify-content-end\">\n          <button\n            className=\"btn blue__btn\"\n            autoFocus\n            disabled={totalprice === 0 || amount === 0 || loading}\n            onClick={handleAddSale}\n            color=\"primary\"\n          >\n            Complete Sale\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"./SalesTable\";\nimport AddSales from \"./AddSales\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert } from \"../../../utils\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Sales() {\n  const [data, setdata] = useState([]);\n  const [open, setopen] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [amount, setamount] = useState(\"\");\n  const [items, setitems] = useState([]);\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n  const [buyitems, setbuyitems] = useState([\n    {\n      qty: 0,\n      rate: 0,\n      discount: 0.0,\n      amount: 0,\n      name: \"\",\n      id: 0,\n      itemID: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    axios.get(\"/store/sales\").then((res) => {\n      setdata(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios.get(\"/store/items\").then((res) => {\n      setitems(res.data);\n    });\n  }, []);\n\n  const calculateAmount = (rate, discount, qty) => {\n    if (rate || discount || qty) {\n      let amnt = Number(rate) * Number(qty);\n      let discountAmount = Number(discount) * amnt;\n      return (amnt - discountAmount).toFixed(2);\n    }\n    return 0;\n  };\n\n  const handleChangeDiscount = (e, i) => {\n    console.log(e);\n    setbuyitems(\n      buyitems.map((obj) => {\n        console.log(obj);\n        return obj.id === i\n          ? {\n              discount: Number(e),\n              name: obj.name,\n              rate: obj.rate,\n              qty: obj.qty,\n              amount: calculateAmount(obj.rate, e, obj.qty),\n              id: i,\n              itemID: obj.itemID,\n            }\n          : obj;\n      })\n    );\n  };\n\n  const handleChangeQty = (e, i) => {\n    console.log(e, i);\n    setbuyitems(\n      buyitems.map((obj) =>\n        obj.id === i\n          ? {\n              qty: Number(e),\n              amount: calculateAmount(obj.rate, obj.discount, e),\n              name: obj.name,\n              rate: obj.rate,\n              discount: obj.discount,\n              itemID: obj.itemID,\n              id: i,\n            }\n          : obj\n      )\n    );\n  };\n\n  const handleSetitem = (id, index) => {\n    let item = items.find((e) => e._id === id);\n    setbuyitems(\n      buyitems.map((obj) => {\n        return obj.id === index\n          ? {\n              name: item.name,\n              rate: item.price,\n              itemID: item._id,\n              amount: item.price,\n              discount: 0.0,\n              id: index,\n              qty: 1,\n            }\n          : obj;\n      })\n    );\n  };\n\n  const handleAddItem = (e) => {\n    e.preventDefault();\n    setbuyitems([\n      ...buyitems,\n      {\n        qty: 0,\n        rate: 0,\n        discount: 0.0,\n        amount: 0,\n        name: \"\",\n        id: buyitems.length,\n        itemID: \"\",\n      },\n    ]);\n  };\n\n  const totalprice = buyitems.reduce((sum, obj) => {\n    return sum + Number(obj.amount);\n  }, 0);\n\n  const handleAddSale = (e) => {\n    e.preventDefault();\n    setloading(true);\n    axios\n      .post(\"/store/sales/create\", {\n        amountPaid: amount,\n        totalCost: totalprice,\n        name,\n        items: buyitems,\n        seller: \"admin\",\n      })\n      .then((res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        alert(\"addes\");\n        history.push(`/store/sales/receipt/${res.data.doc?._id}`);\n      })\n      .catch((err) => {\n        setloading(false);\n        console.log(err);\n      });\n  };\n\n  console.log(buyitems);\n  return (\n    <div>\n      <div className=\"mb-5 d-flex justify-content-between content__container \">\n        <div>\n          <button onClick={() => setopen(true)} className=\"btn blue__btn\">\n            New Sale\n          </button>\n        </div>\n        <form action=\"\">\n          <input\n            placeholder=\"Search....\"\n            className=\"form-control\"\n            type=\"text\"\n          />\n        </form>\n      </div>\n\n      <Table data={data} />\n\n      <AddSales\n        student={name}\n        setstudent={setname}\n        amount={amount}\n        setamount={setamount}\n        buyitems={buyitems}\n        handleChangeQty={handleChangeQty}\n        handleAddItem={handleAddItem}\n        items={items}\n        open={open}\n        loading={loading}\n        handleAddSale={handleAddSale}\n        totalprice={totalprice}\n        handleChangeDiscount={handleChangeDiscount}\n        handleSetitem={handleSetitem}\n        setOpen={setopen}\n      />\n    </div>\n  );\n}\n\nexport default Sales;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles1 = makeStyles((theme) => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n      onChangePage(event, 0);\n    };\n  \n    const handleBackButtonClick = (event) => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n      onChangePage(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n  \n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n  \n\nexport default TablePaginationActions\n"],"sourceRoot":""}