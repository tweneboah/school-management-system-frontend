{"version":3,"sources":["TeachersComponents/message/MessageStudent.js","components/messages/SendToForm.js"],"names":["MessageStudent","useState","message","setmessage","recipient","setrecipient","recipientOptions","setrecipientsOptions","sender","useSelector","selectUser","classes","selectClasses","search","setsearch","className","action","onSubmit","e","preventDefault","axios","get","then","res","data","error","console","log","errorAlert","users","length","map","user","id","userID","name","surname","value","onChange","target","type","placeholder","handleSearchbyClass","defaultValue","hidden","classCode","_id","onSend","post","successAlert","recipientsOptions","searchOptions","sendto","SendToForm","loading","htmlFor","defaultChecked","disabled","readOnly","rows","required","onClick","role","aria-hidden"],"mappings":"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","file":"static/js/70.36a6d17e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport SendForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../store/slices/schoolSlice\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction MessageStudent() {\n  const [message, setmessage] = useState(\"\");\n  const [recipient, setrecipient] = useState(\"\");\n  const [recipientOptions, setrecipientsOptions] = useState([]);\n  const sender = useSelector(selectUser);\n  const classes = useSelector(selectClasses);\n  const [search, setsearch] = useState(\"\");\n\n  const handleSearchbyName = (e) => {\n    e.preventDefault();\n    axios.get(`/students/search/${search}`).then((res) => {\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      if (res.data.users.length <= 0) {\n        return errorAlert(\"No students Find\");\n      }\n      setsearch(\"\");\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            surname: user.surname,\n          };\n        })\n      );\n      console.log(recipientOptions);\n    });\n  };\n\n  const handleSearchbyClass = (e) => {\n    axios.get(`/students/class/${e}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      axios\n        .post(`/chats/user`, {\n          message,\n          sender: sender?.id,\n          userID: recipient,\n        })\n        .then((res) => {\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientOptions.map((e) => (\n      <option key={e.id} value={e.id}>\n        {e.id} - {e.name} {e.surname}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"mb-5 content__container row\">\n        <h3>Select Student </h3>\n        <form action=\"\" onSubmit={handleSearchbyName} className=\"mb-5 col-md-6\">\n          <label className=\"form-label\">\n            Search Student by Name or Student ID\n          </label>\n          <input\n            value={search}\n            onChange={(e) => setsearch(e.target.value)}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Type here...\"\n          />\n        </form>\n        <div className=\"col-md-5\">\n          <label className=\"form-label\">OR Select Student's Class</label>\n          <select\n            onChange={(e) => handleSearchbyClass(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.map((e) => (\n              <option key={e._id} value={e.classCode}>\n                {e.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <SendForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        recipientsOptions={recipientOptions}\n        recipient={recipient}\n        searchOptions={searchOptions}\n        sendto=\"Students\"\n        setrecipient={setrecipient}\n        sender={sender?.id}\n      />\n    </div>\n  );\n}\n\nexport default MessageStudent;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}