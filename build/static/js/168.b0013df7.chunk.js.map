{"version":3,"sources":["AdminComponents/messages/StudentMessage.js","components/messages/SendToForm.js"],"names":["StudentMessage","useState","message","setmessage","recipientsOptions","setrecipientsOptions","recipient","setrecipient","search","setsearch","classes","useSelector","selectClasses","sender","selectUser","loading","setloading","className","action","onSubmit","e","preventDefault","axios","get","then","res","console","log","data","error","errorAlert","users","map","user","id","userID","name","telephone","mobilenumber","surname","value","onChange","target","type","placeholder","handleSearchbyClass","defaultValue","hidden","classCode","_id","length","onSend","selected","find","i","post","successAlert","catch","err","searchOptions","option","sendto","SendToForm","htmlFor","defaultChecked","disabled","readOnly","rows","required","onClick","role","aria-hidden"],"mappings":"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","file":"static/js/168.b0013df7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport SendToForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../store/slices/schoolSlice\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction StudentMessage() {\n  const [message, setmessage] = useState(\"\");\n  const [recipientsOptions, setrecipientsOptions] = useState([]);\n  const [recipient, setrecipient] = useState(\"\");\n  const [search, setsearch] = useState(\"\");\n  const classes = useSelector(selectClasses);\n  const sender = useSelector(selectUser);\n  const [loading, setloading] = useState(\"\");\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      setloading(true);\n      let selected = recipientsOptions.find((i) => i.id === recipient);\n      if (!selected?.telephone) {\n        setloading(false);\n        return errorAlert(\"Student does not have phone number\");\n      }\n      console.log(selected);\n      axios\n        .post(`/chats`, {\n          message,\n          telephone: selected?.telephone,\n          userID: recipient,\n          sender: sender?.id,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setloading(false);\n        });\n    }\n  };\n\n  const handleSearchbyName = (e) => {\n    e.preventDefault();\n    axios.get(`/students/search/${search}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.mobilenumber || user?.telephone,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const handleSearchbyClass = (e) => {\n    console.log(e);\n    axios.get(`/students/class/${e}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        return errorAlert(res.data.error);\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.telephone || user?.mobilenumber,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const searchOptions = () => {\n    return recipientsOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"mb-5 content__container row\">\n        <h3>Select Student </h3>\n        <form action=\"\" onSubmit={handleSearchbyName} className=\"mb-5 col-md-6\">\n          <label className=\"form-label\">\n            Search Student by Name or Student ID\n          </label>\n          <input\n            value={search}\n            onChange={(e) => setsearch(e.target.value)}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Type here...\"\n          />\n        </form>\n        <div className=\"col-md-5\">\n          <label className=\"form-label\">OR Select Student's Class</label>\n          <select\n            onChange={(e) => handleSearchbyClass(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.map((e) => (\n              <option key={e._id} value={e.classCode}>\n                {e.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      {recipientsOptions.length > 0 && (\n        <SendToForm\n          message={message}\n          setmessage={setmessage}\n          onSend={onSend}\n          recipientsOptions={recipientsOptions}\n          recipient={recipient}\n          setrecipient={setrecipient}\n          sender={sender?.id}\n          loading={loading}\n          searchOptions={searchOptions}\n          sendto=\"Student\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default StudentMessage;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}