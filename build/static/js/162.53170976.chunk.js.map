{"version":3,"sources":["AdminComponents/academics/correspondances/CorrespondanceForm.js","AdminComponents/academics/correspondances/EditCorrespondance.js"],"names":["CorrespondanceForm","props","useForm","register","handleSubmit","errors","salutation","setsalutation","subject","setsubject","body","setbody","closing","setclosing","signature","setsignature","date","setdate","address","setaddress","loading","isEdit","handleFunc","onSubmit","action","className","htmlFor","ref","required","value","onChange","e","target","name","rows","type","disabled","role","aria-hidden","EditCorrespondance","useState","setloading","editLoading","seteditLoading","id","useParams","useEffect","axios","get","then","res","doc","data","console","log","moment","format","put","error","errorAlert","successAlert","catch","err"],"mappings":"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","file":"static/js/162.53170976.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CorrespondanceForm(props) {\n  const { register, handleSubmit, errors } = useForm();\n\n  let {\n    salutation,\n    setsalutation,\n    subject,\n    setsubject,\n    body,\n    setbody,\n    closing,\n    setclosing,\n    signature,\n    setsignature,\n    date,\n    setdate,\n    address,\n    setaddress,\n    loading,\n    isEdit,\n    handleFunc,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit(handleFunc)} action=\"\">\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Address\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            ref={register({ required: true })}\n            value={address}\n            onChange={(e) => setaddress(e.target.value)}\n            name=\"address\"\n            rows=\"3\"\n            className=\"form-control\"\n          ></textarea>\n          {errors.address && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Salutations\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            value={salutation}\n            onChange={(e) => setsalutation(e.target.value)}\n            type=\"text\"\n            ref={register({ required: true })}\n            className=\"form-control\"\n            name=\"salutation\"\n          />\n          {errors.salutation && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Subject\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}\n            type=\"text\"\n            className=\"form-control\"\n            name=\"subject\"\n          />\n          {errors.subject && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Body\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            className=\"form-control\"\n            name=\"body\"\n            ref={register({ required: true })}\n            value={body}\n            onChange={(e) => setbody(e.target.value)}\n            rows=\"10\"\n          ></textarea>\n          {errors.body && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Closing\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={closing}\n            onChange={(e) => setclosing(e.target.value)}\n            type=\"text\"\n            className=\"form-control\"\n            name=\"closing\"\n          />\n          {errors.body && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Signature\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            className=\"form-control\"\n            name=\"signature\"\n            ref={register({ required: true })}\n            value={signature}\n            onChange={(e) => setsignature(e.target.value)}\n            rows=\"3\"\n          ></textarea>\n          {errors.signature && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Date\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={date}\n            onChange={(e) => setdate(e.target.value)}\n            type=\"date\"\n            className=\"form-control\"\n            name=\"date\"\n          />\n          {errors.date && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"\">\n        <div className=\"col-sm-10\">\n          <button disabled={loading} type=\"submit\" className=\"btn blue__btn\">\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {isEdit ? \"Save Changes\" : \"Add\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default CorrespondanceForm;\n","import React, { useState, useEffect } from \"react\";\nimport EditForm from \"./CorrespondanceForm\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert, successAlert } from \"../../../utils\";\nimport Loading from \"../../../Loading\";\nimport moment from \"moment\";\n\nfunction EditCorrespondance() {\n  const [address, setaddress] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [body, setbody] = useState(\"\");\n  const [closing, setclosing] = useState(\"\");\n  const [signature, setsignature] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [salutation, setsalutation] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [editLoading, seteditLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setloading(true);\n    axios.get(`/correspondance/${id}`).then((res) => {\n      let doc = res.data.doc;\n      console.log(res);\n      setloading(false);\n      if (doc) {\n        setaddress(doc?.address);\n        setsubject(doc?.subject);\n        setbody(doc?.body);\n        setclosing(doc?.closing);\n        setsignature(doc?.signature);\n        setdate(moment(doc?.date).format(\"YYYY-MM-D\"));\n        setsalutation(doc?.salutation);\n      }\n    });\n  }, [id]);\n\n  const handleEdit = () => {\n    seteditLoading(true);\n    axios\n      .put(`/correspondance/update/${id}`, {\n        address,\n        subject,\n        body,\n        closing,\n        signature,\n        date,\n        salutation,\n      })\n      .then((res) => {\n        seteditLoading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n        }\n        successAlert(\"Correspondance changes successsfully saved\");\n      })\n      .catch((err) => {\n        console.log(err);\n        seteditLoading(false);\n        errorAlert(\"Failed\");\n      });\n  };\n\n  return (\n    <div className=\"content__container\">\n      {loading && <Loading />}\n      <h3>Edit Correspondance</h3>\n      <EditForm\n        address={address}\n        setaddress={setaddress}\n        body={body}\n        setbody={setbody}\n        closing={closing}\n        setclosing={setclosing}\n        signature={signature}\n        setsignature={setsignature}\n        date={date}\n        loading={editLoading}\n        setdate={setdate}\n        setsalutation={setsalutation}\n        salutation={salutation}\n        subject={subject}\n        setsubject={setsubject}\n        handleFunc={handleEdit}\n      />\n    </div>\n  );\n}\n\nexport default EditCorrespondance;\n"],"sourceRoot":""}