{"version":3,"sources":["StudentComponents/messages/MessageTeacher.js","components/messages/SendToForm.js"],"names":["MessageTeacher","useState","message","setmessage","recipient","setrecipient","recipientOptions","setrecipientOptions","user","useSelector","selectUser","loading","setloading","useEffect","axios","get","then","res","data","map","e","id","userID","name","surname","onSend","preventDefault","post","senderID","error","errorAlert","successAlert","recipientsOptions","sendto","searchOptions","option","value","sender","SendToForm","action","className","htmlFor","onChange","target","defaultChecked","hidden","disabled","type","readOnly","rows","required","placeholder","onClick","role","aria-hidden"],"mappings":"8MA4EeA,UArEf,WAA2B,IAAD,EACMC,mBAAS,IADf,mBACjBC,EADiB,KACRC,EADQ,OAEUF,mBAAS,IAFnB,mBAEjBG,EAFiB,KAENC,EAFM,OAGwBJ,mBAAS,IAHjC,mBAGjBK,EAHiB,KAGCC,EAHD,KAIlBC,EAAOC,YAAYC,KAJD,EAKMT,oBAAS,GALf,mBAKjBU,EALiB,KAKRC,EALQ,KAmDxB,OA5CAC,qBAAU,WACRC,IAAMC,IAAI,aAAaC,MAAK,SAACC,GAC3BV,EACEU,EAAIC,KAAKC,KAAI,SAACC,GACZ,MAAO,CACLC,GAAID,EAAEE,OACNC,KAAMH,EAAEG,KACRC,QAASJ,EAAEI,kBAKlB,IAiCD,8BACE,cAAC,IAAD,CACEtB,QAASA,EACTC,WAAYA,EACZsB,OAnCS,SAACL,GACdA,EAAEM,iBACExB,GAAWE,IACbQ,GAAW,GACXE,IACGa,KADH,cACuB,CACnBzB,UACA0B,SAAQ,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAMc,OAChBA,OAAQlB,IAETY,MAAK,SAACC,GAEL,GADAL,GAAW,GACPK,EAAIC,KAAKW,MAEX,OADAC,YAAWb,EAAIC,KAAKW,OACb,EAETE,YAAa,gBACb5B,EAAW,SAmBb6B,kBAAmB1B,EACnBF,UAAWA,EACX6B,OAAO,UACPtB,QAASA,EACTuB,cAlBgB,WACpB,OAAO5B,EAAiBa,KAAI,SAACgB,GAAD,OAC1B,yBAAwBC,MAAOD,EAAOd,GAAtC,UACGc,EAAOZ,KADV,IACiBY,EAAOX,QADxB,IACkCW,EAAOd,GAAI,MADhCc,EAAOd,QAiBlBhB,aAAcA,EACdgC,OAAM,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAMc,a,iCCtEtB,iBAoFegB,IAlFf,YAWI,IAVFpC,EAUC,EAVDA,QACAC,EASC,EATDA,WACAsB,EAQC,EARDA,OACArB,EAOC,EAPDA,UACAC,EAMC,EANDA,aACAgC,EAKC,EALDA,OACAJ,EAIC,EAJDA,OACAC,EAGC,EAHDA,cACAvB,EAEC,EAFDA,QACAkB,EACC,EADDA,MAEA,OACE,uBAAMU,OAAO,GAAGC,UAAU,mCAA1B,UACE,qBAAKA,UAAU,SAAf,SACE,kDAAqBP,OAEvB,sBAAKO,UAAU,gBAAf,UACE,uBAAOA,UAAU,WAAWC,QAAQ,GAApC,wBAGA,qBAAKD,UAAU,YAAf,SACE,yBACEJ,MAAOhC,EACPsC,SAAU,SAACtB,GAAD,OAAOf,EAAae,EAAEuB,OAAOP,QACvCf,GAAG,aACHmB,UAAU,cAJZ,UAME,wBAAQI,gBAAc,EAACC,QAAM,EAA7B,uBAGCX,EACCA,IAEA,wBAAQY,UAAQ,EAAhB,gCAMR,sBAAKN,UAAU,gBAAf,UACE,uBAAOA,UAAU,WAAWC,QAAQ,GAApC,qBAGA,qBAAKD,UAAU,YAAf,SACE,uBAAOA,UAAU,eAAeJ,MAAOC,EAAQU,KAAK,OAAOC,UAAQ,SAGvE,sBAAKR,UAAU,WAAf,UACE,qBAAKA,UAAU,SAAf,SACE,0BACEJ,MAAOlC,EACPwC,SAAU,SAACtB,GAAD,OAAOjB,EAAWiB,EAAEuB,OAAOP,QACrCI,UAAU,eACVjB,KAAK,GACL0B,KAAK,KACLC,UAAQ,EACRC,YAAY,gBAGftB,GAAS,qBAAKW,UAAU,+BAAf,SAA+CX,IACzD,qBAAKW,UAAU,SAAf,SACE,yBACEM,SAAUnC,EACVyC,QAAS3B,EACTe,UAAU,sBAHZ,UAKG7B,GACC,sBACE6B,UAAU,mCACVa,KAAK,SACLC,cAAY,SATlB","file":"static/js/172.eed4b824.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SendForm from \"../../components/messages/SendToForm\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\n\nfunction MessageTeacher() {\n  const [message, setmessage] = useState(\"\");\n  const [recipient, setrecipient] = useState(\"\");\n  const [recipientOptions, setrecipientOptions] = useState([]);\n  const user = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    axios.get(\"/teachers\").then((res) => {\n      setrecipientOptions(\n        res.data.map((e) => {\n          return {\n            id: e.userID,\n            name: e.name,\n            surname: e.surname,\n          };\n        })\n      );\n    });\n  }, []);\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      setloading(true);\n      axios\n        .post(`/chats/user`, {\n          message,\n          senderID: user?.userID,\n          userID: recipient,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <SendForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        recipientsOptions={recipientOptions}\n        recipient={recipient}\n        sendto=\"Teacher\"\n        loading={loading}\n        searchOptions={searchOptions}\n        setrecipient={setrecipient}\n        sender={user?.userID}\n      />\n    </div>\n  );\n}\n\nexport default MessageTeacher;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}