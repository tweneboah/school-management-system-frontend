{"version":3,"sources":["AdminComponents/finance/payrow/EditPayrow.js","AdminComponents/finance/payrow/Payrow.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","open","setOpen","name","salary","allowance","bonus","setname","setsalary","isAdd","loading","onSubmit","setallowance","setbonus","useForm","register","handleSubmit","errors","handleClose","Dialog","fullWidth","maxWidth","aria-labelledby","id","action","htmlFor","ref","required","type","value","onChange","e","target","readOnly","Button","disabled","role","PaymentPlan","user","useSelector","selectUser","useState","planData","setplanData","openEditService","setopenEditService","openAddService","setopenAddService","editID","seteditID","setloading","useEffect","axios","get","then","res","data","sign","currentCurrency","scope","map","plan","pay","find","_id","handleClickEditOpen","delete","error","errorAlert","filter","catch","err","console","log","colSpan","put","a","successAlert","newData","index","findIndex","doc","post","activity"],"mappings":"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","file":"static/js/72.386de8f5.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { useForm } from 'react-hook-form';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs({\n    open, setOpen, \n    name, salary,\n    allowance, bonus, \n    setname,\n    setsalary,\n    isAdd,\n    loading,\n    onSubmit,\n    setallowance,\n    setbonus\n  }) {\n\n    const { register, handleSubmit, errors } = useForm()\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Dialog \n      onClose={handleClose} \n      fullWidth={true}\n      maxWidth=\"sm\"\n      aria-labelledby=\"customized-dialog-title\" \n      open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            {isAdd ? \" Add New Staff Position\" : \"Edit Staff Position\"}\n           \n        </DialogTitle>\n        <form action=\"\">\n        <DialogContent >\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">Position's Name</label>\n                {isAdd ? \n                <>\n                   <input \n                    ref={register({ required: true })}\n                    type=\"text\" \n                    name=\"name\"\n                    value={name}\n                    onChange={e => setname(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.name && <div className=\"text-danger mb-3\">This field  is required.</div>}\n                </> : \n                   <input \n                   ref={register({ required: true })}\n                   type=\"text\" \n                   name=\"name\"\n                   value={name}\n                   readOnly\n                   className=\"form-control\"  \n                   />\n                }\n               \n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Salary</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"salary\"\n                    value={salary}\n                    onChange={e => setsalary(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.salary && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Allowance</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"allowance\"\n                    value={allowance}\n                    onChange={e => setallowance(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.allowance && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Bonus</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"bonus\"\n                    value={bonus}\n                    onChange={e => setbonus(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.bonus && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n            </DialogContent>\n            <DialogActions>\n                <Button \n                disabled={loading} \n                onClick={handleSubmit(onSubmit)} \n                color=\"primary\">\n                    {loading && \n                        <div \n                        className=\"spinner-border spinner-border-sm\" \n                        role=\"status\">\n                        </div>\n                    }\n                    {isAdd ? \"Add\" : \"Save Changes\"}\n                </Button>\n                <Button onClick={handleClose} color=\"secondary\">\n                    Cancel\n                </Button>\n           </DialogActions>\n           </form>\n      </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport axios from \"../../../store/axios\";\nimport Edit from \"./EditPayrow\";\nimport { selectUser } from \"../../../store/slices/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { errorAlert, successAlert, currentCurrency } from \"../../../utils\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nfunction PaymentPlan() {\n  const user = useSelector(selectUser);\n  const [planData, setplanData] = useState([]);\n  const [openEditService, setopenEditService] = useState(false);\n  const [openAddService, setopenAddService] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [editID, seteditID] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [allowance, setallowance] = useState(\"\");\n  const [bonus, setbonus] = useState(\"\");\n  const [salary, setsalary] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/payrow\").then((res) => {\n      setplanData(res.data);\n    });\n  }, []);\n\n  let sign = currentCurrency();\n\n  const handleAddPlans = () => {\n    setloading(true);\n    axios\n      .post(\"/payrow/add\", {\n        name,\n        salary,\n        allowance,\n        bonus,\n      })\n      .then(async (res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setloading(false);\n        setopenAddService(false);\n        setsalary(\"\");\n        setallowance(\"\");\n        setbonus(\"\");\n        setname(\"\");\n        successAlert(\"Changes Saved\");\n        setplanData([res.data.doc, ...planData]);\n        await axios.post(\"/activitylog/create\", {\n          activity: ` ${name} payrow was created`,\n          user: \"admin\",\n        });\n      })\n      .catch(() => {\n        setloading(false);\n        errorAlert(\"Changes failed to save\");\n      });\n  };\n\n  const handleClickEditOpen = (id) => {\n    setopenEditService(true);\n    let pay = planData?.find((e) => e._id === id);\n    setsalary(pay?.salary);\n    setallowance(pay?.allowance);\n    setbonus(pay?.bonus);\n    setname(pay?.name);\n    seteditID(id);\n  };\n\n  const handleEditService = () => {\n    setloading(true);\n    axios\n      .put(`/payrow/update/${editID}`, {\n        salary,\n        allowance,\n        bonus,\n      })\n      .then(async (res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setopenEditService(false);\n        setsalary(\"\");\n        setallowance(\"\");\n        setbonus(\"\");\n        setname(\"\");\n        successAlert(\"Changes Saved\");\n        let newData = planData;\n        let index = planData.findIndex((e) => e._id === editID);\n        newData[index] = res.data.doc;\n        setplanData(newData);\n        await axios.post(\"/activitylog/create\", {\n          activity: ` ${name} payrow was edited`,\n          user: \"admin\",\n        });\n      })\n      .catch((err) => {\n        setloading(false);\n        console.log(err);\n        errorAlert(\"Changes failed to save\");\n      });\n  };\n\n  const handleDeletePlan = (id) => {\n    axios\n      .delete(`/payrow/delete/${id}`)\n      .then((res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setplanData(planData.filter((e) => e._id !== id));\n      })\n      .catch((err) => {\n        console.log(err);\n        errorAlert(\"Delete failed\");\n      });\n  };\n\n  return (\n    <div>\n      <h3 className=\"my-5\">Staff Roles and Payrow Details</h3>\n      <table className=\"table content__container\">\n        <thead>\n          <tr>\n            <th scope=\"col\">\n              <h4>Staff Position</h4>\n              <p>\n                {\" \"}\n                <small> Available position in the school </small>\n              </p>\n            </th>\n            <th>\n              <h5>\n                <strong> Salary ({sign})</strong>\n              </h5>\n            </th>\n            <th>\n              <h5>\n                <strong> Allowance ({sign})</strong>\n              </h5>\n            </th>\n            <th>\n              <h5>\n                <strong> Bonus ({sign})</strong>\n              </h5>\n            </th>\n            {user?.role === \"admin\" && (\n              <th>\n                <h5>Action</h5>\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {planData &&\n            planData.map((plan) => (\n              <tr key={plan._id}>\n                <th scope=\"row\">{plan?.name}</th>\n                <td>{plan?.salary}</td>\n                <td>{plan?.allowance}</td>\n                <td>{plan?.bonus}</td>\n                {user?.role === \"admin\" && (\n                  <td className=\"d-flex\">\n                    <IconButton onClick={() => handleClickEditOpen(plan?._id)}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleDeletePlan(plan?._id)}>\n                      <DeleteForeverIcon />\n                    </IconButton>\n                  </td>\n                )}\n              </tr>\n            ))}\n          <tr>\n            <th colSpan=\"4\">Add Additional Position</th>\n            <th>\n              <IconButton onClick={() => setopenAddService(true)}>\n                <AddIcon />\n              </IconButton>\n            </th>\n          </tr>\n        </tbody>\n      </table>\n\n      {/* edit */}\n      <Edit\n        open={openEditService}\n        loading={loading}\n        salary={salary}\n        setsalary={setsalary}\n        bonus={bonus}\n        name={name}\n        setname={setname}\n        allowance={allowance}\n        setallowance={setallowance}\n        setbonus={setbonus}\n        setOpen={setopenEditService}\n        onSubmit={handleEditService}\n      />\n\n      {/* add new */}\n      <Edit\n        name={name}\n        loading={loading}\n        setname={setname}\n        allowance={allowance}\n        setallowance={setallowance}\n        open={openAddService}\n        salary={salary}\n        bonus={bonus}\n        setbonus={setbonus}\n        setsalary={setsalary}\n        isAdd={true}\n        setOpen={setopenAddService}\n        onSubmit={handleAddPlans}\n      />\n    </div>\n  );\n}\n\nexport default PaymentPlan;\n"],"sourceRoot":""}