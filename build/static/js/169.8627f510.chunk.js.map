{"version":3,"sources":["components/dashboard/EditNotice.js","components/dashboard/Notice.js","AdminComponents/notifications/Notices.js","AdminComponents/notifications/CreatNotice.js","AdminComponents/notifications/NotificationsPage.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","CustomizedDialogs","open","setOpen","handleDelete","editData","useForm","register","handleSubmit","errors","handleClose","Dialog","maxWidth","fullWidth","aria-labelledby","id","dividers","action","type","ref","required","value","title","onChange","e","settitle","target","name","moment","date","format","setdate","description","setdescription","rows","createdby","setcreatedby","disabled","loading","handleCreate","Notice","createdBy","createdAt","isEdit","colors","bgColor","Math","floor","random","length","Chip","style","backgroundColor","label","fromNow","seteditID","Notices","openEdit","setopenEdit","notices","searchDate","handleSearch","handleReset","setsearchDate","searchTitle","setsearchTitle","placeholder","map","_id","CreatNotice","preventDefault","NotificationsPage","useState","setnotices","storeData","setstoreData","setcreatedBy","setloading","editTitle","seteditTitle","editDescription","seteditDescription","editDate","seteditDate","editCreatedBy","seteditCreatedBy","editloading","seteditloading","editID","useEffect","axios","get","then","res","data","console","log","put","error","errorAlert","successAlert","arr","filter","doc","catch","err","post","newNotices","i","toLowerCase","includes","Date","toISOString","slice","delete"],"mappings":"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","file":"static/js/169.8627f510.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function CustomizedDialogs({\n  open,\n  setOpen,\n  handleDelete,\n  editData,\n}) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit Notice\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <form className=\"row\" action=\"\">\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Title</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.title}\n                onChange={(e) => editData?.settitle(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"title\"\n              />\n              {errors.title && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Date</label>\n              <input\n                type=\"date\"\n                value={moment(editData?.date).format(\"YYYY-MM-D\")}\n                ref={register({ required: true })}\n                onChange={(e) => editData?.setdate(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"date\"\n              />\n              {errors.date && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <label className=\"form-label\">Description</label>\n              <textarea\n                value={editData?.description}\n                onChange={(e) => editData?.setdescription(e.target.value)}\n                rows={5}\n                className=\"form-control\"\n                name=\"description\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Created By</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.createdby}\n                onChange={(e) => editData?.setcreatedby(e.target.value)}\n                className=\"form-control  py-4\"\n                name=\"createdby\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <button\n                  disabled={editData?.loading}\n                  onClick={handleSubmit(editData?.handleCreate)}\n                  className=\"btn blue__btn\"\n                >\n                  Save Changes\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={handleDelete} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport Edit from \"./EditNotice\";\n\nfunction Notice({\n  description,\n  createdBy,\n  date,\n  title,\n  createdAt,\n  isEdit,\n  id,\n  open,\n  setOpen,\n  editData,\n  handleDelete,\n}) {\n  const colors = [\"#2ad7c5\", \"#ffa201\", \"#f939a1\"];\n\n  const handleOpenEdit = () => {\n    setOpen(true);\n    editData?.setdate(date);\n    editData?.settitle(title);\n    editData?.setcreatedby(createdBy);\n    editData?.setdescription(description);\n    editData?.seteditID(id);\n  };\n\n  let bgColor = colors[Math.floor(Math.random() * colors.length)];\n\n  return (\n    <div className=\"notice d-flex justify-content-between align-items-center\">\n      <div>\n        <h4>\n          <strong>{title}</strong>\n        </h4>\n        <Chip\n          style={{ backgroundColor: `${bgColor}` }}\n          className=\"chip__date mb-2\"\n          label={moment(date).format(\" Do MMMM, YYYY\")}\n        />\n        <p>\n          <strong> {description} </strong>\n        </p>\n        <div>\n          <h6>\n            {createdBy} /{\" \"}\n            <span className=\"text-muted\"> {moment(createdAt).fromNow()}</span>\n          </h6>\n        </div>\n      </div>\n      {isEdit && (\n        <>\n          <div>\n            <IconButton onClick={() => handleOpenEdit()}>\n              <OpenInNewIcon />\n            </IconButton>\n          </div>\n          <Edit\n            editData={editData}\n            open={open}\n            handleDelete={handleDelete}\n            setOpen={setOpen}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Notice;\n","import React from \"react\";\nimport Notice from \"../../components/dashboard/Notice\";\n\nfunction Notices({\n  openEdit,\n  setopenEdit,\n  notices,\n  searchDate,\n  handleSearch,\n  handleReset,\n  setsearchDate,\n  searchTitle,\n  setsearchTitle,\n  editData,\n  handleDelete,\n}) {\n  return (\n    <div className=\"content__container\">\n      <h3>Notice Board</h3>\n      <form action=\"\" className=\"row\">\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchDate}\n            onChange={(e) => setsearchDate(e.target.value)}\n            placeholder=\"Search by Date\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchTitle}\n            onChange={(e) => setsearchTitle(e.target.value)}\n            placeholder=\"Search by Title\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-3 d-flex justify-content-between\">\n          <div>\n            <button onClick={handleSearch} className=\"btn blue__btn\">\n              Search\n            </button>\n          </div>\n          <div>\n            <button onClick={handleReset} className=\"btn orange__btn\">\n              Reset\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"notice__container my-5\">\n        {notices?.length > 0 ? (\n          notices?.map((e) => (\n            <div className=\"py-3\" key={e._id}>\n              <Notice\n                description={e.description}\n                open={openEdit}\n                isEdit={true}\n                setOpen={setopenEdit}\n                date={e.date}\n                id={e._id}\n                createdAt={e.createdAt}\n                title={e.title}\n                createdBy={e.createdBy}\n                editData={editData}\n                handleDelete={handleDelete}\n              />\n              <hr />\n            </div>\n          ))\n        ) : (\n          <h4>No Notice yet</h4>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notices;\n","import React from 'react'\nimport { useForm } from \"react-hook-form\";\n\nfunction CreatNotice({\n    date, setdate, title, settitle, handleCreate,loading,\n    createdby, setcreatedby, description, setdescription}) {\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        setdate(\"\");\n        settitle(\"\");\n        setcreatedby(\"\");\n        setdescription(\"\");\n    }\n\n    return (\n        <div className=\"content__container mb-5\">\n             <h3>Create A Notice</h3>\n               <form className=\"row\" action=\"\">\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Title</label>\n                        <input \n                        type=\"text\"\n                        ref={register({ required: true})} \n                        value={title}\n                        onChange= {e => settitle(e.target.value)} \n                        className=\"form-control py-4\" \n                        name=\"title\"/>\n                         {errors.title && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Date</label>\n                        <input \n                         type=\"date\" \n                         value={date}\n                         ref={register({ required: true})} \n                         onChange={e => setdate(e.target.value)}\n                         className=\"form-control py-4\" \n                         name=\"date\"/>\n                          {errors.date && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Description</label>\n                        <textarea \n                         value={description}\n                         onChange={e => setdescription(e.target.value)}\n                         rows={5}\n                         className=\"form-control\" \n                         name=\"description\"/>\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label  \n                           className=\"form-label\">\n                            Created By\n                        </label>\n                        <input \n                            type=\"text\" \n                            ref={register({ required: true})} \n                            value={createdby}\n                            onChange={e => setcreatedby(e.target.value)}\n                            className=\"form-control  py-4\" \n                            name=\"createdby\"/>\n                    </div> \n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleSubmit(handleCreate)} \n                            className=\"btn blue__btn\">\n                                Create\n                            </button>\n                        </div>\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleCancel} \n                            className=\"btn btn-danger\">\n                                Cancel\n                            </button>\n                        </div>\n                    </div>    \n             </form>  \n        </div>\n    )\n}\n\nexport default CreatNotice\n","import React, { useState, useEffect } from \"react\";\nimport Notice from \"./Notices\";\nimport CreateNotice from \"./CreatNotice\";\nimport axios from \"../../store/axios\";\nimport {} from \"../../store/slices/schoolSlice\";\nimport { errorAlert, successAlert } from \"../../utils\";\n\nfunction NotificationsPage() {\n  const [notices, setnotices] = useState([]);\n  const [storeData, setstoreData] = useState([]);\n  const [title, settitle] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [createdBy, setcreatedBy] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [loading, setloading] = useState(\"\");\n  const [searchDate, setsearchDate] = useState(\"\");\n  const [searchTitle, setsearchTitle] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n\n  //edit\n  const [editTitle, seteditTitle] = useState(\"\");\n  const [editDescription, seteditDescription] = useState(\"\");\n  const [editDate, seteditDate] = useState(\"\");\n  const [editCreatedBy, seteditCreatedBy] = useState(\"\");\n  const [editloading, seteditloading] = useState(false);\n  const [editID, seteditID] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/notification\").then((res) => {\n      setnotices(res.data);\n      console.log(res.data);\n      setstoreData(res.data);\n    });\n  }, []);\n\n  const handleEditNotice = () => {\n    seteditloading(true);\n    axios\n      .put(`/notification/update/${editID}`, {\n        title: editTitle,\n        date: editDate,\n        createdBy: editCreatedBy,\n        description: editDescription,\n      })\n      .then((res) => {\n        seteditloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice successfully edited\");\n        seteditTitle(\"\");\n        seteditDate(\"\");\n        seteditCreatedBy(\"\");\n        seteditDescription(\"\");\n        setopenEdit(false);\n        let arr = notices.filter((e) => e._id !== editID);\n        setnotices([res.data.doc, ...arr]);\n      })\n      .catch((err) => {\n        console.log(err);\n        seteditloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    axios\n      .delete(`/notification/delete/${editID}`)\n      .then((res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setnotices(notices.filter((e) => e._id !== editID));\n        successAlert(\"Notice deleted\");\n      })\n      .catch((err) => {\n        errorAlert(\"Failed to delete\");\n      });\n  };\n\n  const handleCreate = () => {\n    setloading(true);\n    axios\n      .post(\"/notification/create\", {\n        title,\n        date,\n        createdBy,\n        description,\n      })\n      .then((res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice created\");\n        settitle(\"\");\n        setdate(\"\");\n        setcreatedBy(\"\");\n        setdescription(\"\");\n        setnotices([res.data.doc, ...notices]);\n      })\n      .catch((err) => {\n        console.log(err);\n        setloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setsearchTitle(\"\");\n    setsearchDate(\"\");\n    setnotices(storeData);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (title || date) {\n      let newNotices = [];\n      if (title) {\n        newNotices = storeData.filter(\n          (i) =>\n            i.title.toLowerCase().includes(searchTitle.toLowerCase()) ||\n            i.description.toLowerCase().includes(searchTitle.toLowerCase())\n        );\n      }\n      if (date) {\n        newNotices = storeData.filter(\n          (i) => new Date(i.createdAt).toISOString().slice(0, 10) === date\n        );\n      }\n\n      setnotices(newNotices);\n    } else {\n      setnotices(storeData);\n    }\n  };\n\n  const editData = {\n    date: editDate,\n    setdate: seteditDate,\n    loading: editloading,\n    handleCreate: handleEditNotice,\n    title: editTitle,\n    settitle: seteditTitle,\n    description: editDescription,\n    setdescription: seteditDescription,\n    createdby: editCreatedBy,\n    setcreatedby: seteditCreatedBy,\n    seteditID: seteditID,\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-3\">Notice Board</h3>\n      <CreateNotice\n        date={date}\n        setdate={setdate}\n        loading={loading}\n        handleCreate={handleCreate}\n        title={title}\n        settitle={settitle}\n        description={description}\n        setdescription={setdescription}\n        createdby={createdBy}\n        setcreatedby={setcreatedBy}\n      />\n      <div id=\"notifications\">\n        <Notice\n          searchDate={searchDate}\n          openEdit={openEdit}\n          handleReset={handleReset}\n          setopenEdit={setopenEdit}\n          handleSearch={handleSearch}\n          setsearchDate={setsearchDate}\n          searchTitle={searchTitle}\n          setsearchTitle={setsearchTitle}\n          notices={notices}\n          handleDelete={handleDelete}\n          editData={editData}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NotificationsPage;\n"],"sourceRoot":""}