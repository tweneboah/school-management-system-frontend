{"version":3,"sources":["AdminComponents/messages/StaffMessage.js","components/messages/SendToForm.js"],"names":["StaffMessage","useState","message","setmessage","recipientsOptions","setrecipientsOptions","recipient","setrecipient","sender","useSelector","selectUser","loading","setloading","error","seterror","useEffect","axios","get","then","res","data","map","user","id","userID","name","telephone","mobilenumber","surname","onSend","e","preventDefault","selectedStudent","find","i","post","errorAlert","successAlert","catch","err","console","log","searchOptions","option","value","sendto","SendToForm","action","className","htmlFor","onChange","target","defaultChecked","hidden","disabled","type","readOnly","rows","required","placeholder","onClick","role","aria-hidden"],"mappings":"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","file":"static/js/167.f064b4da.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SendToForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction StaffMessage() {\n  const [message, setmessage] = useState(\"\");\n  const [recipientsOptions, setrecipientsOptions] = useState([]);\n  const [recipient, setrecipient] = useState(\"\");\n  const sender = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/teachers\").then((res) => {\n      setrecipientsOptions(\n        res.data.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.telephone || user?.mobilenumber,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  }, []);\n\n  const onSend = (e) => {\n    e.preventDefault();\n    seterror(\"\");\n    if (!recipient) {\n      seterror(\"Please select recipient\");\n    }\n\n    if (message && recipient) {\n      setloading(true);\n      let selectedStudent = recipientsOptions.find((i) => i.id === recipient);\n      axios\n        .post(`/chats`, {\n          message,\n          telephone: selectedStudent?.telephone,\n          userID: recipient,\n          sender: sender?.id,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setloading(false);\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientsOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <SendToForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        loading={loading}\n        recipientsOptions={recipientsOptions}\n        recipient={recipient}\n        setrecipient={setrecipient}\n        sender={sender?.id}\n        searchOptions={searchOptions}\n        sendto=\"Staff\"\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default StaffMessage;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}