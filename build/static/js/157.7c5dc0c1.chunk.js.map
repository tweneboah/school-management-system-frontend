{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","TeachersComponents/academics/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","rows","handleEdit","examMark","classWorkPercentage","examPercentage","setexamMark","classworkMark","setclassworkMark","handleOpenPercentage","classes","getGrade","classwork","exam","num","getTotal","getInterpretation","Number","getClassWorkPercentage","mark","per","work","dec","toFixed","getexamPercentage","exams","decclass","decexam","className","component","Paper","aria-label","align","colSpan","name","type","onChange","e","target","value","onClick","length","map","row","userID","readOnly","classWork","total","position","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","direction","FullScreenDialog","open","setOpen","setexam","setclassWork","onSubmit","classID","loading","setposition","useForm","register","handleSubmit","errors","handleClose","fullScreen","onClose","TransitionComponent","color","variant","edge","action","min","max","a1","disabled","class","role","aria-hidden","SBA","useState","students","setstudents","openEdit","setopenEdit","data","setdata","currentYear","useSelector","selectacademicYear","selectedUser","setselectedUser","useParams","id","loadingSubmit","setloadingSubmit","error","seterror","useEffect","axios","get","then","res","docs","sba","errorAlert","currentTerm","result","handleonSubmit","a","put","_id","doc","selectedStudent","find"],"mappings":"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","file":"static/js/157.7c5dc0c1.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/BorderColor\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  examMark,\n  classWorkPercentage,\n  examPercentage,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n  handleOpenPercentage,\n}) {\n  const classes = useStyles();\n  const getGrade = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    if (num >= 75 && num <= 100) {\n      return \"A1\";\n    } else if (num >= 70 && num <= 74) {\n      return \"B2\";\n    } else if (num >= 65 && num <= 69) {\n      return \"B3\";\n    } else if (num >= 60 && num <= 64) {\n      return \"C4\";\n    } else if (num >= 55 && num <= 59) {\n      return \"C5\";\n    } else if (num >= 50 && num <= 54) {\n      return \"C6\";\n    } else if (num >= 45 && num <= 49) {\n      return \"D7\";\n    } else if (num >= 40 && num <= 44) {\n      return \"E8\";\n    } else if (num >= 0 && num <= 39) {\n      return \"F9\";\n    } else {\n      return null;\n    }\n  };\n\n  const getInterpretation = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    num = Number(num);\n    if (num > 75 && num <= 100) {\n      return \"Excellent\";\n    } else if (num >= 70 && num <= 74) {\n      return \"Vert good\";\n    } else if (num >= 65 && num <= 69) {\n      return \"Good\";\n    } else if (num >= 60 && num <= 64) {\n      return \"Credit\";\n    } else if (num >= 55 && num <= 59) {\n      return \"Credit\";\n    } else if (num >= 50 && num <= 54) {\n      return \"Credit\";\n    } else if (num >= 45 && num <= 49) {\n      return \"Pass\";\n    } else if (num >= 40 && num <= 44) {\n      return \"Pass\";\n    } else if (num >= 0 && num <= 39) {\n      return \"Failure\";\n    } else {\n      return null;\n    }\n  };\n\n  const getClassWorkPercentage = (mark, per, work) => {\n    if (mark && per && work) {\n      let dec = (Number(mark) / Number(work)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = (mark, per, exam) => {\n    if (mark && per && exam) {\n      let dec = (Number(mark) / Number(exam)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (classwork, exams) => {\n    if (!classwork && !exams) {\n      return \"-\";\n    }\n    let decclass =\n      (Number(classwork) / Number(classworkMark || 0)) *\n      (Number(classWorkPercentage || 0) / 100);\n    let decexam =\n      (Number(exams) / Number(examMark)) * (Number(examPercentage || 0) / 100);\n\n    let total = (Number(decexam + decclass) * 100).toFixed(0);\n    return total;\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work\n                <input\n                  className=\"form-control\"\n                  name=\"classworkMark\"\n                  type=\"number\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                Class Work ({classWorkPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam ({examPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Total 100%</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Grade</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <small>Interpretation</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Position</small>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                <small>Set</small>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getClassWorkPercentage(\n                          row?.classWork,\n                          classWorkPercentage,\n                          classworkMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getexamPercentage(\n                          row?.exam,\n                          examPercentage,\n                          examMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      {/* <small> {getTotal(row?.classWork, row?.exam)}</small> */}\n                      <small> {row?.total}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small> {getGrade(row?.classWork, row?.exam)}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small>\n                        {\" \"}\n                        {getInterpretation(row?.classWork, row?.exam)}\n                      </small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {\" \"}\n                      <small>{row?.position}</small>{\" \"}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn btn-sm\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ( out of {Number(classworkMark || 0)})\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(classworkMark || 0)}\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark (out of {Number(examMark || 0)})\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(examMark || 0)}\n            </span>\n          )}\n        </div>\n        {/* <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div> */}\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"../../AdminComponents/academics/sba/SbaTable\";\nimport Edit from \"../../AdminComponents/academics/sba/EditModal\";\n\nimport axios from \"../../store/axios\";\nimport { useParams } from \"react-router-dom\";\nimport { errorAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectacademicYear } from \"../../store/slices/schoolSlice\";\n\nfunction SBA() {\n  const [students, setstudents] = useState([]);\n  const [exam, setexam] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [data, setdata] = useState([]);\n  const currentYear = useSelector(selectacademicYear);\n  const [selectedUser, setselectedUser] = useState({});\n  const { id, classID } = useParams();\n  const [position, setposition] = useState(\"\");\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n  const [error, seterror] = useState(false);\n  const [examMark, setexamMark] = useState(\"\");\n  const [classWork, setclassWork] = useState(\"\");\n  const [classworkMark, setclassworkMark] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`/classes/classCode/${classID}`).then((res) => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        seterror(true);\n        return errorAlert(\"SBA not set for this class\");\n      }\n      axios\n        .get(\n          `/sba/${classID}/${id}/${currentYear?.currentYear}/${currentYear?.currentTerm}`\n        )\n        .then((result) => {\n          setdata(result.data.docs);\n          setstudents(result.data.docs?.students);\n          setclassworkMark(result.data.docs?.classWork);\n          setexamMark(result.data.docs?.exam);\n        });\n    });\n  }, [currentYear, id, classID]);\n\n  const handleEdit = (id) => {\n    if (!classworkMark) {\n      return errorAlert(\"Please set  classWork %\");\n    }\n    if (!examMark) {\n      return errorAlert(\"Please set  exam score %\");\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find((e) => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n    await axios.put(`/sba/update/${data?._id}`, {\n      exam: examMark,\n      classWork: classworkMark,\n    });\n    axios\n      .put(`/sba/update/student/${data?._id}/${selectedUser?.userID}`, {\n        classWork,\n        exam,\n        userID: selectedUser?.userID,\n        name: selectedUser?.name,\n        position: position,\n      })\n      .then((res) => {\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(res.data.doc?.students);\n      });\n  };\n\n  return (\n    <div>\n      {error ? (\n        <div>SBA is not set for this class</div>\n      ) : (\n        <>\n          <Table\n            setclassWork={setclassWork}\n            rows={students}\n            handleEdit={handleEdit}\n            examMark={examMark}\n            setexamMark={setexamMark}\n            classworkMark={classworkMark}\n            setclassworkMark={setclassworkMark}\n          />\n          <Edit\n            name={selectedUser?.name}\n            userID={selectedUser?.userID}\n            exam={exam}\n            classworkMark={classworkMark}\n            examMark={examMark}\n            classID={classID}\n            loading={loadingSubmit}\n            setposition={setposition}\n            position={position}\n            setexam={setexam}\n            setclassWork={setclassWork}\n            classWork={classWork}\n            open={openEdit}\n            onSubmit={handleonSubmit}\n            setOpen={setopenEdit}\n          />{\" \"}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}