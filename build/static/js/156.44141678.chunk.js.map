{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","AdminComponents/academics/sba/Search.js","AdminComponents/academics/sba/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","rows","handleEdit","examMark","setclassWork","setexamMark","classworkMark","setclassworkMark","classes","className","component","Paper","aria-label","align","colSpan","onChange","e","target","value","length","map","row","userID","name","readOnly","classWork","type","exam","exams","work","Number","position","onClick","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","direction","FullScreenDialog","open","setOpen","setexam","onSubmit","classID","loading","setposition","useForm","register","handleSubmit","errors","handleClose","fullScreen","onClose","TransitionComponent","color","variant","edge","action","min","max","a1","disabled","class","role","aria-hidden","Search","setclass","term","setterm","academicYear","setacademicYear","course","setcourse","handleSearch","useSelector","selectClasses","yearGroup","selectYearGroup","useState","courses","setcourses","handleSelectClass","a","axios","get","then","res","data","docs","i","code","htmlFor","defaultValue","hidden","classCode","_id","year","SBA","setdata","students","setstudents","classWorkMark","setclassWorkMark","openEdit","setopenEdit","setclassID","setyear","isSet","setisSet","selectedUser","setselectedUser","loadingClass","setloadingClass","loadingSubmit","setloadingSubmit","preventDefault","errorAlert","sba","result","console","log","handleonSubmit","put","doc","catch","err","id","selectedStudent","find"],"mappings":"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","file":"static/js/156.44141678.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  setclassWork,\n  examMark,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n}) {\n  const classes = useStyles();\n\n  const getTotal = (exams, work) => {\n    return Number(exams || 0) + Number(work || 0);\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work (%)\n                <input\n                  className=\"form-control\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam Score (%)\n                <input\n                  className=\"form-control\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">Total (100%)</TableCell>\n              <TableCell align=\"left\">Position</TableCell>\n              <TableCell align=\"left\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getTotal(row?.exam, row?.classWork)}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.position}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ({Number(classworkMark || 0)}%)\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              contributes ({Number(classworkMark || 0)}%\n            </span>\n          )}\n        </div>\n\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark ({Number(examMark || 0)})%\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              contributes ({Number(examMark || 0)})%\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div>\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  selectYearGroup,\n  selectClasses,\n  selectCourses,\n} from \"../../../store/slices/schoolSlice\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\n\nfunction Search({\n  classID,\n  setclass,\n  loading,\n  term,\n  setterm,\n  academicYear,\n  setacademicYear,\n  course,\n  setcourse,\n  handleSearch,\n}) {\n  const classes = useSelector(selectClasses);\n  //const courses = useSelector(selectCourses);\n  const yearGroup = useSelector(selectYearGroup);\n  const [courses, setcourses] = useState();\n\n  const handleSelectClass = async (e) => {\n    setclass(e);\n    setcourse(\"\");\n    await axios.get(`courses/class/${e}`).then((res) => {\n      setcourses(\n        res.data.docs.map((i) => {\n          return {\n            code: i.code,\n            name: i.name,\n          };\n        })\n      );\n    });\n  };\n\n  return (\n    <form className=\"content__container col-8 mb-5\">\n      <h6>Search Class</h6>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"col-form-label\">\n          Class\n        </label>\n        <div className=\"\">\n          <select\n            name=\"academic-calendar\"\n            className=\"form-select\"\n            value={classID}\n            onChange={(e) => handleSelectClass(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.length > 0 ? (\n              classes.map((e) => (\n                <option key={e._id} value={e.classCode}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No classes yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      {classID && (\n        <>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Course\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={course}\n                onChange={(e) => setcourse(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {courses?.length > 0 ? (\n                  courses.map((e) => (\n                    <option key={e._id} value={e.code}>\n                      {e.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No courses yet for this class</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Academic Year\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={academicYear}\n                onChange={(e) => setacademicYear(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {yearGroup.length > 0 ? (\n                  yearGroup.map((e) => (\n                    <option key={e._id} value={e.year}>\n                      {e.year}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No data</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Term\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={term}\n                onChange={(e) => setterm(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n              </select>\n            </div>\n          </div>\n        </>\n      )}\n      <div className=\"\">\n        <div>\n          <button\n            onClick={handleSearch}\n            disabled={loading || !classID}\n            type=\"submit\"\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {\"Search\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport SBATable from \"./SbaTable\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert } from \"../../../utils\";\nimport Edit from \"./EditModal\";\n\nfunction SBA() {\n  const [data, setdata] = useState([]);\n  const [students, setstudents] = useState([]);\n  const [examMark, setexamMark] = useState(\"\");\n  const [classWorkMark, setclassWorkMark] = useState(\"\");\n  const [exam, setexam] = useState(\"\");\n  const [classWork, setclassWork] = useState(\"\");\n  const [position, setposition] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [term, setterm] = useState(\"\");\n  const [classID, setclassID] = useState(\"\");\n  const [course, setcourse] = useState(\"\");\n  const [year, setyear] = useState(\"\");\n  const [isSet, setisSet] = useState(false);\n  const [selectedUser, setselectedUser] = useState({});\n  const [loadingClass, setloadingClass] = useState(false);\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n\n  const handleSearch = async (e) => {\n    setisSet(false);\n    setstudents([]);\n    setexamMark(\"\");\n    setposition(\"\");\n    setclassWorkMark(\"\");\n    e.preventDefault();\n    if (classID === \"\" || term === \"\" || course === \"\" || year === \"\") {\n      return errorAlert(\"Please select all fields\");\n    }\n    setloadingClass(true);\n    await axios.get(`/classes/classCode/${classID}`).then(async (res) => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        setloadingClass(false);\n        return errorAlert(\"SBA not set for this class\");\n      }\n      setisSet(true);\n      await axios\n        .get(`/sba/${classID}/${course}/${year}/${term}`)\n        .then((result) => {\n          setloadingClass(false);\n          let data = result.data.docs;\n          console.log(data);\n          setdata(data);\n          setclassWorkMark(data?.classWork);\n          setexamMark(data?.exam);\n          console.log(result.data);\n          setstudents(data?.students);\n        });\n    });\n  };\n\n  const handleEdit = (id) => {\n    if (!classWorkMark) {\n      return errorAlert(\"Please set  classWork %\");\n    }\n    if (!examMark) {\n      return errorAlert(\"Please set  exam score %\");\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find((e) => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n\n    await axios.put(`/sba/update/${data?._id}`, {\n      exam: examMark,\n      classWork: classWorkMark,\n    });\n\n    await axios\n      .put(`/sba/update/student/${data?._id}/${selectedUser?.userID}`, {\n        classWork,\n        exam,\n        userID: selectedUser?.userID,\n        name: selectedUser?.name,\n        position,\n      })\n      .then((res) => {\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(res.data.doc?.students);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        errorAlert(\"Failed\");\n        setloadingSubmit(false);\n      });\n  };\n\n  return (\n    <div>\n      <h3>S.B.A</h3>\n      <div className=\"mb-3\">\n        <Search\n          academicYear={year}\n          setacademicYear={setyear}\n          setterm={setterm}\n          term={term}\n          course={course}\n          setcourse={setcourse}\n          classID={classID}\n          setclass={setclassID}\n          loading={loadingClass}\n          handleSearch={handleSearch}\n        />\n      </div>\n      {isSet && (\n        <SBATable\n          setclassWork={setclassWork}\n          rows={students}\n          examMark={examMark}\n          setexamMark={setexamMark}\n          classworkMark={classWorkMark}\n          setclassworkMark={setclassWorkMark}\n          handleEdit={handleEdit}\n        />\n      )}\n\n      <Edit\n        name={selectedUser?.name}\n        userID={selectedUser?.userID}\n        exam={exam}\n        examMark={examMark}\n        classworkMark={classWorkMark}\n        classID={classID}\n        loading={loadingSubmit}\n        setposition={setposition}\n        position={position}\n        setexam={setexam}\n        setclassWork={setclassWork}\n        classWork={classWork}\n        open={openEdit}\n        onSubmit={handleonSubmit}\n        setOpen={setopenEdit}\n      />\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}