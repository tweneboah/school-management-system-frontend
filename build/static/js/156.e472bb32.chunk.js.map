{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","TeachersComponents/academics/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","rows","handleEdit","examMark","setclassWork","setexamMark","classworkMark","setclassworkMark","classes","className","component","Paper","aria-label","align","colSpan","onChange","e","target","value","length","map","row","userID","name","readOnly","classWork","type","exam","exams","work","Number","position","onClick","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","direction","FullScreenDialog","open","setOpen","setexam","onSubmit","classID","loading","setposition","useForm","register","handleSubmit","errors","handleClose","fullScreen","onClose","TransitionComponent","color","variant","edge","action","min","max","a1","disabled","class","role","aria-hidden","SBA","useState","students","setstudents","openEdit","setopenEdit","data","setdata","currentYear","useSelector","selectacademicYear","selectedUser","setselectedUser","useParams","id","loadingSubmit","setloadingSubmit","error","seterror","useEffect","axios","get","then","res","docs","sba","errorAlert","currentTerm","result","handleonSubmit","a","put","_id","doc","selectedStudent","find"],"mappings":"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","file":"static/js/156.e472bb32.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  setclassWork,\n  examMark,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n}) {\n  const classes = useStyles();\n\n  const getTotal = (exams, work) => {\n    return Number(exams || 0) + Number(work || 0);\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work (%)\n                <input\n                  className=\"form-control\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam Score (%)\n                <input\n                  className=\"form-control\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">Total (100%)</TableCell>\n              <TableCell align=\"left\">Position</TableCell>\n              <TableCell align=\"left\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getTotal(row?.exam, row?.classWork)}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.position}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ({Number(classworkMark || 0)}%)\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              contributes ({Number(classworkMark || 0)}%\n            </span>\n          )}\n        </div>\n\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark ({Number(examMark || 0)})%\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              contributes ({Number(examMark || 0)})%\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div>\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"../../AdminComponents/academics/sba/SbaTable\";\nimport Edit from \"../../AdminComponents/academics/sba/EditModal\";\n\nimport axios from \"../../store/axios\";\nimport { useParams } from \"react-router-dom\";\nimport { errorAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectacademicYear } from \"../../store/slices/schoolSlice\";\n\nfunction SBA() {\n  const [students, setstudents] = useState([]);\n  const [exam, setexam] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [data, setdata] = useState([]);\n  const currentYear = useSelector(selectacademicYear);\n  const [selectedUser, setselectedUser] = useState({});\n  const { id, classID } = useParams();\n  const [position, setposition] = useState(\"\");\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n  const [error, seterror] = useState(false);\n  const [examMark, setexamMark] = useState(\"\");\n  const [classWork, setclassWork] = useState(\"\");\n  const [classworkMark, setclassworkMark] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`/classes/classCode/${classID}`).then((res) => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        seterror(true);\n        return errorAlert(\"SBA not set for this class\");\n      }\n      axios\n        .get(\n          `/sba/${classID}/${id}/${currentYear?.currentYear}/${currentYear?.currentTerm}`\n        )\n        .then((result) => {\n          setdata(result.data.docs);\n          setstudents(result.data.docs?.students);\n          setclassworkMark(result.data.docs?.classWork);\n          setexamMark(result.data.docs?.exam);\n        });\n    });\n  }, [currentYear, id, classID]);\n\n  const handleEdit = (id) => {\n    if (!classworkMark) {\n      return errorAlert(\"Please set  classWork %\");\n    }\n    if (!examMark) {\n      return errorAlert(\"Please set  exam score %\");\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find((e) => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n    await axios.put(`/sba/update/${data?._id}`, {\n      exam: examMark,\n      classWork: classworkMark,\n    });\n    axios\n      .put(`/sba/update/student/${data?._id}/${selectedUser?.userID}`, {\n        classWork,\n        exam,\n        userID: selectedUser?.userID,\n        name: selectedUser?.name,\n        position: position,\n      })\n      .then((res) => {\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(res.data.doc?.students);\n      });\n  };\n\n  return (\n    <div>\n      {error ? (\n        <div>SBA is not set for this class</div>\n      ) : (\n        <>\n          <Table\n            setclassWork={setclassWork}\n            rows={students}\n            handleEdit={handleEdit}\n            examMark={examMark}\n            setexamMark={setexamMark}\n            classworkMark={classworkMark}\n            setclassworkMark={setclassworkMark}\n          />\n          <Edit\n            name={selectedUser?.name}\n            userID={selectedUser?.userID}\n            exam={exam}\n            classworkMark={classworkMark}\n            examMark={examMark}\n            classID={classID}\n            loading={loadingSubmit}\n            setposition={setposition}\n            position={position}\n            setexam={setexam}\n            setclassWork={setclassWork}\n            classWork={classWork}\n            open={openEdit}\n            onSubmit={handleonSubmit}\n            setOpen={setopenEdit}\n          />{\" \"}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}