{"version":3,"sources":["AdminComponents/Profile/academicsReports/EnrollmentStatics.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/tables/ExcelExport.js"],"names":["EnrollmentStatics","useState","school","setschool","data","setdata","campuses","useSelector","selectCampuses","useEffect","axios","get","then","res","a","students","map","e","classStudents","filter","i","classID","classCode","female","gender","length","male","total","unspecified","campus","find","_id","campusID","name","getData","className","id","fullName","motto","scope","reduce","v","onClick","window","print","columns","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExcelExport","btn","element","col","label"],"mappings":"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","file":"static/js/101.3feeb7b0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../../store/axios\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectCampuses } from \"../../../store/slices/schoolSlice\";\nimport Excel from \"../../../components/tables/ExcelExport\";\n\nfunction EnrollmentStatics() {\n  const [school, setschool] = useState({});\n  const [data, setdata] = useState([]);\n  const campuses = useSelector(selectCampuses);\n\n  useEffect(() => {\n    axios.get(\"/school\").then((res) => {\n      setschool(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getData = async () => {\n      let students = await (await axios.get(\"/students\")).data;\n      axios.get(`/classes`).then((res) => {\n        setdata(\n          res.data.map((e) => {\n            let classStudents = students.filter(\n              (i) => i.classID === e.classCode\n            );\n            let female = classStudents.filter((i) => i.gender === \"female\")\n              .length;\n            let male = classStudents.filter((i) => i.gender === \"male\").length;\n            return {\n              ...e,\n              female,\n              male,\n              total: classStudents.length,\n              unspecified: classStudents.length - (male + female),\n              campus: campuses.find((i) => i._id === e.campusID)?.name,\n            };\n          })\n        );\n      });\n    };\n\n    getData();\n  }, [campuses]);\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const columns = [\n    { id: \"name\", name: \"Class\" },\n    { id: \"campus\", name: \"Campus\" },\n    { id: \"male\", name: \"Male\" },\n    { id: \"female\", name: \"Female\" },\n    { id: \"unspecified\", name: \"Unspecified\" },\n    { id: \"total\", name: \"Total\" },\n  ];\n\n  return (\n    <>\n      <div className=\"content__container\" id=\"section-to-print\">\n        <div className=\"text-center\">\n          {/* <img width=\"100px\" src={getImgSrc(school?.profileUrl)} alt=\"\" /> */}\n          <h5>\n            <strong>{school?.fullName}</strong>\n          </h5>\n          <h6>{school?.motto}</h6>\n\n          <h5 className=\"my-4\">ENROLLMENT STATISTICS</h5>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Class/ Group</th>\n              <th scope=\"col\">Campus / Section</th>\n              <th scope=\"col\">Male</th>\n              <th scope=\"col\">Female</th>\n              <th scope=\"col\">UnSpecified</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              data.map((e) => (\n                <tr key={e._id}>\n                  <td>{e?.name}</td>\n                  <td>{e?.campus}</td>\n                  <td>{e?.male}</td>\n                  <td>{e?.female}</td>\n                  <td>{e?.unspecified}</td>\n                  <td>{e?.total}</td>\n                </tr>\n              ))}\n            <tr>\n              <th>Total</th>\n              <td></td>\n              <td>{data.reduce((v, i) => v + i.male, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.female, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.unspecified, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.total, 0)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className=\"my-3 text-center\">\n        <button onClick={handlePrint} className=\"btn blue__btn mr-2\">\n          Print\n        </button>\n        <Excel data={data} columns={columns} />\n      </div>\n    </>\n  );\n}\n\nexport default EnrollmentStatics;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport moment from \"moment\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction ExcelExport({ data, btn, name, columns }) {\n  return (\n    <ExcelFile\n      element={<button className=\"btn blue__btn\">{btn || \"Download\"}</button>}\n    >\n      <ExcelSheet data={data} name={name || \"data\"}>\n        {columns.map((col) => (\n          <ExcelColumn key={col.id} label={col.name} value={col.id} />\n        ))}\n      </ExcelSheet>\n    </ExcelFile>\n  );\n}\n\nexport default ExcelExport;\n"],"sourceRoot":""}