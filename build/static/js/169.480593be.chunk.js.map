{"version":3,"sources":["AdminComponents/notifications/Notices.js","AdminComponents/notifications/CreatNotice.js","AdminComponents/notifications/NotificationsPage.js","components/dashboard/EditNotice.js","components/dashboard/Notice.js"],"names":["Notices","openEdit","setopenEdit","notices","searchDate","handleSearch","handleReset","setsearchDate","searchTitle","setsearchTitle","editData","handleDelete","className","action","type","value","onChange","e","target","placeholder","onClick","length","map","Notice","description","open","isEdit","setOpen","date","id","_id","createdAt","title","createdBy","CreatNotice","setdate","settitle","handleCreate","loading","createdby","setcreatedby","setdescription","useForm","register","handleSubmit","errors","ref","required","name","rows","disabled","preventDefault","NotificationsPage","useState","setnotices","storeData","setstoreData","setcreatedBy","setloading","editTitle","seteditTitle","editDescription","seteditDescription","editDate","seteditDate","editCreatedBy","seteditCreatedBy","editloading","seteditloading","editID","seteditID","useEffect","axios","get","then","res","data","console","log","put","error","errorAlert","successAlert","arr","filter","doc","catch","err","post","newNotices","i","toLowerCase","includes","Date","toISOString","slice","delete","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","DialogContent","MuiDialogContent","CustomizedDialogs","handleClose","Dialog","maxWidth","fullWidth","aria-labelledby","dividers","moment","format","colors","bgColor","Math","floor","random","Chip","style","backgroundColor","label","fromNow"],"mappings":"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","file":"static/js/169.480593be.chunk.js","sourcesContent":["import React from \"react\";\nimport Notice from \"../../components/dashboard/Notice\";\n\nfunction Notices({\n  openEdit,\n  setopenEdit,\n  notices,\n  searchDate,\n  handleSearch,\n  handleReset,\n  setsearchDate,\n  searchTitle,\n  setsearchTitle,\n  editData,\n  handleDelete,\n}) {\n  return (\n    <div className=\"content__container\">\n      <h3>Notice Board</h3>\n      <form action=\"\" className=\"row\">\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchDate}\n            onChange={(e) => setsearchDate(e.target.value)}\n            placeholder=\"Search by Date\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchTitle}\n            onChange={(e) => setsearchTitle(e.target.value)}\n            placeholder=\"Search by Title\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-3 d-flex justify-content-between\">\n          <div>\n            <button onClick={handleSearch} className=\"btn blue__btn\">\n              Search\n            </button>\n          </div>\n          <div>\n            <button onClick={handleReset} className=\"btn orange__btn\">\n              Reset\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"notice__container my-5\">\n        {notices?.length > 0 ? (\n          notices?.map((e) => (\n            <div className=\"py-3\" key={e._id}>\n              <Notice\n                description={e.description}\n                open={openEdit}\n                isEdit={true}\n                setOpen={setopenEdit}\n                date={e.date}\n                id={e._id}\n                createdAt={e.createdAt}\n                title={e.title}\n                createdBy={e.createdBy}\n                editData={editData}\n                handleDelete={handleDelete}\n              />\n              <hr />\n            </div>\n          ))\n        ) : (\n          <h4>No Notice yet</h4>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notices;\n","import React from 'react'\nimport { useForm } from \"react-hook-form\";\n\nfunction CreatNotice({\n    date, setdate, title, settitle, handleCreate,loading,\n    createdby, setcreatedby, description, setdescription}) {\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        setdate(\"\");\n        settitle(\"\");\n        setcreatedby(\"\");\n        setdescription(\"\");\n    }\n\n    return (\n        <div className=\"content__container mb-5\">\n             <h3>Create A Notice</h3>\n               <form className=\"row\" action=\"\">\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Title</label>\n                        <input \n                        type=\"text\"\n                        ref={register({ required: true})} \n                        value={title}\n                        onChange= {e => settitle(e.target.value)} \n                        className=\"form-control py-4\" \n                        name=\"title\"/>\n                         {errors.title && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Date</label>\n                        <input \n                         type=\"date\" \n                         value={date}\n                         ref={register({ required: true})} \n                         onChange={e => setdate(e.target.value)}\n                         className=\"form-control py-4\" \n                         name=\"date\"/>\n                          {errors.date && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Description</label>\n                        <textarea \n                         value={description}\n                         onChange={e => setdescription(e.target.value)}\n                         rows={5}\n                         className=\"form-control\" \n                         name=\"description\"/>\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label  \n                           className=\"form-label\">\n                            Created By\n                        </label>\n                        <input \n                            type=\"text\" \n                            ref={register({ required: true})} \n                            value={createdby}\n                            onChange={e => setcreatedby(e.target.value)}\n                            className=\"form-control  py-4\" \n                            name=\"createdby\"/>\n                    </div> \n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleSubmit(handleCreate)} \n                            className=\"btn blue__btn\">\n                                Create\n                            </button>\n                        </div>\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleCancel} \n                            className=\"btn btn-danger\">\n                                Cancel\n                            </button>\n                        </div>\n                    </div>    \n             </form>  \n        </div>\n    )\n}\n\nexport default CreatNotice\n","import React, { useState, useEffect } from \"react\";\nimport Notice from \"./Notices\";\nimport CreateNotice from \"./CreatNotice\";\nimport axios from \"../../store/axios\";\nimport {} from \"../../store/slices/schoolSlice\";\nimport { errorAlert, successAlert } from \"../../utils\";\n\nfunction NotificationsPage() {\n  const [notices, setnotices] = useState([]);\n  const [storeData, setstoreData] = useState([]);\n  const [title, settitle] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [createdBy, setcreatedBy] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [loading, setloading] = useState(\"\");\n  const [searchDate, setsearchDate] = useState(\"\");\n  const [searchTitle, setsearchTitle] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n\n  //edit\n  const [editTitle, seteditTitle] = useState(\"\");\n  const [editDescription, seteditDescription] = useState(\"\");\n  const [editDate, seteditDate] = useState(\"\");\n  const [editCreatedBy, seteditCreatedBy] = useState(\"\");\n  const [editloading, seteditloading] = useState(false);\n  const [editID, seteditID] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/notification\").then((res) => {\n      setnotices(res.data);\n      console.log(res.data);\n      setstoreData(res.data);\n    });\n  }, []);\n\n  const handleEditNotice = () => {\n    seteditloading(true);\n    axios\n      .put(`/notification/update/${editID}`, {\n        title: editTitle,\n        date: editDate,\n        createdBy: editCreatedBy,\n        description: editDescription,\n      })\n      .then((res) => {\n        seteditloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice successfully edited\");\n        seteditTitle(\"\");\n        seteditDate(\"\");\n        seteditCreatedBy(\"\");\n        seteditDescription(\"\");\n        setopenEdit(false);\n        let arr = notices.filter((e) => e._id !== editID);\n        setnotices([res.data.doc, ...arr]);\n      })\n      .catch((err) => {\n        console.log(err);\n        seteditloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    axios\n      .delete(`/notification/delete/${editID}`)\n      .then((res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setnotices(notices.filter((e) => e._id !== editID));\n        successAlert(\"Notice deleted\");\n      })\n      .catch((err) => {\n        errorAlert(\"Failed to delete\");\n      });\n  };\n\n  const handleCreate = () => {\n    setloading(true);\n    axios\n      .post(\"/notification/create\", {\n        title,\n        date,\n        createdBy,\n        description,\n      })\n      .then((res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice created\");\n        settitle(\"\");\n        setdate(\"\");\n        setcreatedBy(\"\");\n        setdescription(\"\");\n        setnotices([res.data.doc, ...notices]);\n      })\n      .catch((err) => {\n        console.log(err);\n        setloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setsearchTitle(\"\");\n    setsearchDate(\"\");\n    setnotices(storeData);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (title || date) {\n      let newNotices = [];\n      if (title) {\n        newNotices = storeData.filter(\n          (i) =>\n            i.title.toLowerCase().includes(searchTitle.toLowerCase()) ||\n            i.description.toLowerCase().includes(searchTitle.toLowerCase())\n        );\n      }\n      if (date) {\n        newNotices = storeData.filter(\n          (i) => new Date(i.createdAt).toISOString().slice(0, 10) === date\n        );\n      }\n\n      setnotices(newNotices);\n    } else {\n      setnotices(storeData);\n    }\n  };\n\n  const editData = {\n    date: editDate,\n    setdate: seteditDate,\n    loading: editloading,\n    handleCreate: handleEditNotice,\n    title: editTitle,\n    settitle: seteditTitle,\n    description: editDescription,\n    setdescription: seteditDescription,\n    createdby: editCreatedBy,\n    setcreatedby: seteditCreatedBy,\n    seteditID: seteditID,\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-3\">Notice Board</h3>\n      <CreateNotice\n        date={date}\n        setdate={setdate}\n        loading={loading}\n        handleCreate={handleCreate}\n        title={title}\n        settitle={settitle}\n        description={description}\n        setdescription={setdescription}\n        createdby={createdBy}\n        setcreatedby={setcreatedBy}\n      />\n      <div id=\"notifications\">\n        <Notice\n          searchDate={searchDate}\n          openEdit={openEdit}\n          handleReset={handleReset}\n          setopenEdit={setopenEdit}\n          handleSearch={handleSearch}\n          setsearchDate={setsearchDate}\n          searchTitle={searchTitle}\n          setsearchTitle={setsearchTitle}\n          notices={notices}\n          handleDelete={handleDelete}\n          editData={editData}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NotificationsPage;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function CustomizedDialogs({\n  open,\n  setOpen,\n  handleDelete,\n  editData,\n}) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit Notice\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <form className=\"row\" action=\"\">\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Title</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.title}\n                onChange={(e) => editData?.settitle(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"title\"\n              />\n              {errors.title && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Date</label>\n              <input\n                type=\"date\"\n                value={moment(editData?.date).format(\"YYYY-MM-D\")}\n                ref={register({ required: true })}\n                onChange={(e) => editData?.setdate(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"date\"\n              />\n              {errors.date && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <label className=\"form-label\">Description</label>\n              <textarea\n                value={editData?.description}\n                onChange={(e) => editData?.setdescription(e.target.value)}\n                rows={5}\n                className=\"form-control\"\n                name=\"description\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Created By</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.createdby}\n                onChange={(e) => editData?.setcreatedby(e.target.value)}\n                className=\"form-control  py-4\"\n                name=\"createdby\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <button\n                  disabled={editData?.loading}\n                  onClick={handleSubmit(editData?.handleCreate)}\n                  className=\"btn blue__btn\"\n                >\n                  Save Changes\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={handleDelete} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport Edit from \"./EditNotice\";\n\nfunction Notice({\n  description,\n  createdBy,\n  date,\n  title,\n  createdAt,\n  isEdit,\n  id,\n  open,\n  setOpen,\n  editData,\n  handleDelete,\n}) {\n  const colors = [\"#2ad7c5\", \"#ffa201\", \"#f939a1\"];\n\n  const handleOpenEdit = () => {\n    setOpen(true);\n    editData?.setdate(date);\n    editData?.settitle(title);\n    editData?.setcreatedby(createdBy);\n    editData?.setdescription(description);\n    editData?.seteditID(id);\n  };\n\n  let bgColor = colors[Math.floor(Math.random() * colors.length)];\n\n  return (\n    <div className=\"notice d-flex justify-content-between align-items-center\">\n      <div>\n        <h4>\n          <strong>{title}</strong>\n        </h4>\n        <Chip\n          style={{ backgroundColor: `${bgColor}` }}\n          className=\"chip__date mb-2\"\n          label={moment(date).format(\" Do MMMM, YYYY\")}\n        />\n        <p>\n          <strong> {description} </strong>\n        </p>\n        <div>\n          <h6>\n            {createdBy} /{\" \"}\n            <span className=\"text-muted\"> {moment(createdAt).fromNow()}</span>\n          </h6>\n        </div>\n      </div>\n      {isEdit && (\n        <>\n          <div>\n            <IconButton onClick={() => handleOpenEdit()}>\n              <OpenInNewIcon />\n            </IconButton>\n          </div>\n          <Edit\n            editData={editData}\n            open={open}\n            handleDelete={handleDelete}\n            setOpen={setOpen}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Notice;\n"],"sourceRoot":""}