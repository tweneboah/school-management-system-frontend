{"version":3,"sources":["AdminComponents/Profile/academicsReports/AcademicTranscripts.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/tables/ExcelExport.js"],"names":["AcademicTranscripts","years","useSelector","selectYearGroup","current","selectacademicYear","useState","currentTerm","from","setfrom","currentYear","to","setto","studentID","setstudentID","loading","setloading","show","setshow","school","setschool","data","setdata","error","seterror","studentDetails","setstudentDetails","useEffect","axios","get","then","res","action","className","name","value","onChange","e","target","id","defaultValue","hidden","length","map","year","_id","disabled","onClick","preventDefault","errorAlert","a","student","console","log","docs","type","role","aria-hidden","fullName","motto","userID","surname","scope","course","exam","classWork","position","colSpan","window","print","columns","btn","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExcelExport","element","col","label"],"mappings":"wOA0MeA,UAhMf,WACE,IAAMC,EAAQC,YAAYC,KACpBC,EAAUF,YAAYG,KAFC,EAGLC,mBAASF,EAAQG,aAHZ,mBAGtBC,EAHsB,KAGhBC,EAHgB,OAITH,mBAASF,EAAQM,aAJR,mBAItBC,EAJsB,KAIlBC,EAJkB,OAKKN,mBAAS,IALd,mBAKtBO,EALsB,KAKXC,EALW,OAMCR,mBAAS,IANV,mBAMtBS,EANsB,KAMbC,EANa,OAOLV,oBAAS,GAPJ,mBAOtBW,EAPsB,KAOhBC,EAPgB,OAQDZ,mBAAS,IARR,mBAQtBa,EARsB,KAQdC,EARc,OASLd,mBAAS,IATJ,mBAStBe,EATsB,KAShBC,EATgB,OAUHhB,oBAAS,GAVN,mBAUtBiB,EAVsB,KAUfC,EAVe,OAYelB,mBAAS,IAZxB,mBAYtBmB,EAZsB,KAYNC,EAZM,KAuD7B,OAzCAC,qBAAU,WACRC,IAAMC,IAAI,WAAWC,MAAK,SAACC,GACzBX,EAAUW,EAAIV,WAEf,IAsCD,gCACE,qDACA,uBAAMW,OAAO,GAAGC,UAAU,yBAA1B,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOA,UAAU,aAAjB,kBACA,yBACEC,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAQ4B,EAAEC,OAAOH,QAClCI,GAAG,aACHN,UAAU,cALZ,UAOE,wBAAQO,cAAY,EAACC,QAAM,EAA3B,uBAGA,wBAAQN,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,uBAGJ,sBAAKF,UAAU,gBAAf,UACE,uBAAOA,UAAU,aAAjB,kBACA,yBACEC,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOzB,EAAMyB,EAAEC,OAAOH,QAChCI,GAAG,aACHN,UAAU,cALZ,UAOE,wBAAQO,cAAY,EAACC,QAAM,EAA3B,uBAGCxC,EAAMyC,OAAS,EACdzC,EAAM0C,KAAI,SAACN,GAAD,OACR,wBAAoBF,MAAOE,EAAEO,KAA7B,SACGP,EAAEO,MADQP,EAAEQ,QAKjB,wBAAQC,UAAQ,EAAhB,+BAIN,sBAAKb,UAAU,gBAAf,UACE,uBAAOA,UAAU,aAAjB,wBACA,uBACEE,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAOvB,EAAauB,EAAEC,OAAOH,QACvCF,UAAU,oBAGd,qBAAKA,UAAU,OAAf,SACE,yBACEc,QAzFW,SAACV,GAGpB,GAFAb,GAAS,GACTa,EAAEW,kBACGnC,EACH,OAAOoC,YAAW,kBAEpBjC,GAAW,GACXY,IAAMC,IAAN,sBAAyBhB,EAAzB,YAAsCF,EAAtC,YAA4CH,IAAQsB,KAApD,+BAAAoB,EAAA,MAAyD,WAAOnB,GAAP,eAAAmB,EAAA,sEACnCtB,IAAMC,IAAN,4BAA+BhB,IADI,UACnDsC,EADmD,OAEvDC,QAAQC,IAAIF,GACZnC,GAAW,GACXE,GAAQ,IACJiC,EAAQ9B,KAAKE,MALsC,yCAM9CC,GAAS,IANqC,UAQvDE,EAAkByB,EAAQ9B,KAAK8B,SAC/BnC,GAAW,IAEPe,EAAIV,KAAKE,MAX0C,0CAY9C0B,YAAW,2BAZmC,QAcvD3B,EAAQS,EAAIV,KAAKiC,MAdsC,4CAAzD,wDAmFQR,SAAU/B,EACVwC,KAAK,SACLtB,UAAU,gBAJZ,UAMGlB,GACC,sBACEkB,UAAU,mCACVuB,KAAK,SACLC,cAAY,SAVlB,iBAkBHxC,GACC,sBAAKgB,UAAU,0BAA0BM,GAAG,mBAA5C,UACE,sBAAKN,UAAU,cAAf,UACE,6BACE,wCAASd,QAAT,IAASA,OAAT,EAASA,EAAQuC,aAEnB,oCAAKvC,QAAL,IAAKA,OAAL,EAAKA,EAAQwC,QACb,qBAAI1B,UAAU,OAAd,2CAC0BR,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAgBmC,aAG3CrC,EACC,gCACG,IACD,oBAAIU,UAAU,0BAAd,kCAGF,qCACE,sBAAKA,UAAU,cAAf,UACE,sCACGR,QADH,IACGA,OADH,EACGA,EAAgBS,KADnB,WAC0BT,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAgBoC,WAE1C,wCACQrD,EADR,WACsBG,QAGxB,wBAAOsB,UAAU,uBAAjB,UACE,gCACE,+BACE,oBAAI6B,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,2BAGJ,gCACGzC,EAAKqB,OAAS,EACbrB,EAAKsB,KAAI,SAACN,GAAD,OACP,+BACE,oBAAIyB,MAAM,MAAV,gBAAiBzB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAG0B,SACpB,8BAAM,OAAD1B,QAAC,IAADA,OAAA,EAAAA,EAAG2B,MAAO3B,EAAE4B,YACjB,oCAAK5B,QAAL,IAAKA,OAAL,EAAKA,EAAG6B,iBAIZ,6BACE,oBAAIC,QAAS,EAAGlC,UAAU,cAA1B,4BAOR,sBAAKA,UAAU,mBAAf,UACE,wBAAQc,QAtIF,WAClBqB,OAAOC,SAqImCpC,UAAU,qBAAxC,mBAGA,cAAC,IAAD,CAAOZ,KAAMA,EAAMiD,QArIjB,CACd,CAAE/B,GAAI,UAAWL,KAAM,WACvB,CAAEK,GAAI,OAAQL,KAAM,QACpB,CAAEK,GAAI,OAAQL,KAAM,SAkI6BqC,IAAI,uB,oBChMzDC,EAAOC,QAAU,EAAQ,M,iCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB9C,EAAQ+C,EAAK/C,MACjB,MAAOZ,GAEP,YADAsD,EAAOtD,GAIL2D,EAAKC,KACPP,EAAQzC,GAERiD,QAAQR,QAAQzC,GAAOL,KAAKgD,EAAOC,GAIxB,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAM3C,GACbuC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ5C,GAGlE,SAAS4C,EAAOa,GACdlB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASa,GAGnEd,OAAMe,OA/BZ,mC,iCCAA,4CAIMC,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAgB3BC,IAdf,YAAoD,IAA7B7E,EAA4B,EAA5BA,KAAMkD,EAAsB,EAAtBA,IAAKrC,EAAiB,EAAjBA,KAAMoC,EAAW,EAAXA,QACtC,OACE,cAACwB,EAAD,CACEK,QAAS,wBAAQlE,UAAU,gBAAlB,SAAmCsC,GAAO,aADrD,SAGE,cAACyB,EAAD,CAAY3E,KAAMA,EAAMa,KAAMA,GAAQ,OAAtC,SACGoC,EAAQ3B,KAAI,SAACyD,GAAD,OACX,cAACH,EAAD,CAA0BI,MAAOD,EAAIlE,KAAMC,MAAOiE,EAAI7D,IAApC6D,EAAI7D,a","file":"static/js/99.c8e146e4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\nimport { getImgSrc, errorAlert } from \"../../../utils\";\nimport Excel from \"../../../components/tables/ExcelExport\";\nimport {\n  selectYearGroup,\n  selectacademicYear,\n} from \"../../../store/slices/schoolSlice\";\n\nfunction AcademicTranscripts() {\n  const years = useSelector(selectYearGroup);\n  const current = useSelector(selectacademicYear);\n  const [from, setfrom] = useState(current.currentTerm);\n  const [to, setto] = useState(current.currentYear);\n  const [studentID, setstudentID] = useState(\"\");\n  const [loading, setloading] = useState(\"\");\n  const [show, setshow] = useState(false);\n  const [school, setschool] = useState({});\n  const [data, setdata] = useState([]);\n  const [error, seterror] = useState(false);\n\n  const [studentDetails, setstudentDetails] = useState({});\n\n  useEffect(() => {\n    axios.get(\"/school\").then((res) => {\n      setschool(res.data);\n    });\n  }, []);\n\n  const handleSearch = (e) => {\n    seterror(false);\n    e.preventDefault();\n    if (!studentID) {\n      return errorAlert(\"select student\");\n    }\n    setloading(true);\n    axios.get(`sba/student/${studentID}/${to}/${from}`).then(async (res) => {\n      let student = await axios.get(`/students/student/${studentID}`);\n      console.log(student);\n      setloading(false);\n      setshow(true);\n      if (student.data.error) {\n        return seterror(true);\n      }\n      setstudentDetails(student.data.student);\n      setloading(false);\n\n      if (res.data.error) {\n        return errorAlert(\"Student does not exist\");\n      }\n      setdata(res.data.docs);\n    });\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const columns = [\n    { id: \"subject\", name: \"Subject\" },\n    { id: \"term\", name: \"Term\" },\n    { id: \"mark\", name: \"Mark\" },\n  ];\n\n  return (\n    <div>\n      <h3>Academic Transcript</h3>\n      <form action=\"\" className=\"row content__container\">\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Term</label>\n          <select\n            name=\"type\"\n            value={from}\n            onChange={(e) => setfrom(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            <option value=\"1\">1st</option>\n            <option value=\"2\">2rd</option>\n            <option value=\"3\">3rd</option>\n          </select>\n        </div>\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Year</label>\n          <select\n            name=\"type\"\n            value={to}\n            onChange={(e) => setto(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {years.length > 0 ? (\n              years.map((e) => (\n                <option key={e._id} value={e.year}>\n                  {e.year}\n                </option>\n              ))\n            ) : (\n              <option disabled>No data yet</option>\n            )}\n          </select>\n        </div>\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Student ID</label>\n          <input\n            value={studentID}\n            onChange={(e) => setstudentID(e.target.value)}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <button\n            onClick={handleSearch}\n            disabled={loading}\n            type=\"submit\"\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Search\n          </button>\n        </div>\n      </form>\n\n      {show && (\n        <div className=\"content__container mt-4\" id=\"section-to-print\">\n          <div className=\"text-center\">\n            <h5>\n              <strong>{school?.fullName}</strong>\n            </h5>\n            <h6>{school?.motto}</h6>\n            <h5 className=\"my-4\">\n              STUDENT TRANSCRIPT FOR {studentDetails?.userID}\n            </h5>\n          </div>\n          {error ? (\n            <div>\n              {\" \"}\n              <h3 className=\"text-center text-danger\">Student Not found</h3>\n            </div>\n          ) : (\n            <>\n              <div className=\"text-center\">\n                <h6>\n                  {studentDetails?.name} {studentDetails?.surname}\n                </h6>\n                <div>\n                  Term {from} - Year {to}\n                </div>\n              </div>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Subject</th>\n                    <th scope=\"col\">Final Score</th>\n                    <th scope=\"col\">Position</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.length > 0 ? (\n                    data.map((e) => (\n                      <tr>\n                        <th scope=\"row\">{e?.course}</th>\n                        <td>{e?.exam + e.classWork}</td>\n                        <td>{e?.position}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={3} className=\"text-center\">\n                        No Data\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n              <div className=\"my-3 text-center\">\n                <button onClick={handlePrint} className=\"btn blue__btn mr-2\">\n                  Print\n                </button>\n                <Excel data={data} columns={columns} btn=\"save\" />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AcademicTranscripts;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport moment from \"moment\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction ExcelExport({ data, btn, name, columns }) {\n  return (\n    <ExcelFile\n      element={<button className=\"btn blue__btn\">{btn || \"Download\"}</button>}\n    >\n      <ExcelSheet data={data} name={name || \"data\"}>\n        {columns.map((col) => (\n          <ExcelColumn key={col.id} label={col.name} value={col.id} />\n        ))}\n      </ExcelSheet>\n    </ExcelFile>\n  );\n}\n\nexport default ExcelExport;\n"],"sourceRoot":""}