{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","AdminComponents/academics/sba/Search.js","AdminComponents/academics/sba/SetPercentageModel.js","AdminComponents/academics/sba/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","rows","handleEdit","examMark","classWorkPercentage","examPercentage","setexamMark","classworkMark","setclassworkMark","handleOpenPercentage","classes","getGrade","classwork","exam","num","getTotal","getInterpretation","Number","getClassWorkPercentage","mark","per","work","dec","toFixed","getexamPercentage","exams","decclass","decexam","className","component","Paper","aria-label","align","colSpan","name","type","onChange","e","target","value","onClick","length","map","row","userID","readOnly","classWork","total","position","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","direction","FullScreenDialog","open","setOpen","setexam","setclassWork","onSubmit","classID","loading","setposition","useForm","register","handleSubmit","errors","handleClose","fullScreen","onClose","TransitionComponent","color","variant","edge","action","min","max","a1","disabled","class","role","aria-hidden","Search","setclass","term","setterm","academicYear","setacademicYear","course","setcourse","handleSearch","useSelector","selectClasses","yearGroup","selectYearGroup","useState","courses","setcourses","handleSelectClass","a","axios","get","then","res","data","docs","i","code","htmlFor","defaultValue","hidden","classCode","_id","year","Slide","setexamPercentage","setclassWorkPercentage","console","log","Dialog","AppBar","Toolbar","Typography","IconButton","SBA","setdata","students","setstudents","classWorkMark","setclassWorkMark","openEdit","setopenEdit","setclassID","setyear","isSet","setisSet","selectedUser","setselectedUser","loadingClass","setloadingClass","loadingSubmit","setloadingSubmit","openPercentage","setopenPercentage","newexamPercentage","setnewexamPercentage","newclassWorkPercentage","setnewclassWorkPercentage","preventDefault","errorAlert","sba","result","sortedStudents","sort","b","ex","cla","exammark","classmark","handleonSubmit","newData","newStudents","put","id","selectedStudent","find"],"mappings":"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","file":"static/js/156.937dee3f.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/BorderColor\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  examMark,\n  classWorkPercentage,\n  examPercentage,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n  handleOpenPercentage,\n}) {\n  const classes = useStyles();\n  const getGrade = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    if (num >= 75 && num <= 100) {\n      return \"A1\";\n    } else if (num >= 70 && num <= 74) {\n      return \"B2\";\n    } else if (num >= 65 && num <= 69) {\n      return \"B3\";\n    } else if (num >= 60 && num <= 64) {\n      return \"C4\";\n    } else if (num >= 55 && num <= 59) {\n      return \"C5\";\n    } else if (num >= 50 && num <= 54) {\n      return \"C6\";\n    } else if (num >= 45 && num <= 49) {\n      return \"D7\";\n    } else if (num >= 40 && num <= 44) {\n      return \"E8\";\n    } else if (num >= 0 && num <= 39) {\n      return \"F9\";\n    } else {\n      return null;\n    }\n  };\n\n  const getInterpretation = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    num = Number(num);\n    if (num > 75 && num <= 100) {\n      return \"Excellent\";\n    } else if (num >= 70 && num <= 74) {\n      return \"Vert good\";\n    } else if (num >= 65 && num <= 69) {\n      return \"Good\";\n    } else if (num >= 60 && num <= 64) {\n      return \"Credit\";\n    } else if (num >= 55 && num <= 59) {\n      return \"Credit\";\n    } else if (num >= 50 && num <= 54) {\n      return \"Credit\";\n    } else if (num >= 45 && num <= 49) {\n      return \"Pass\";\n    } else if (num >= 40 && num <= 44) {\n      return \"Pass\";\n    } else if (num >= 0 && num <= 39) {\n      return \"Failure\";\n    } else {\n      return null;\n    }\n  };\n\n  const getClassWorkPercentage = (mark, per, work) => {\n    if (mark && per && work) {\n      let dec = (Number(mark) / Number(work)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = (mark, per, exam) => {\n    if (mark && per && exam) {\n      let dec = (Number(mark) / Number(exam)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (classwork, exams) => {\n    if (!classwork && !exams) {\n      return \"-\";\n    }\n    let decclass =\n      (Number(classwork) / Number(classworkMark || 0)) *\n      (Number(classWorkPercentage || 0) / 100);\n    let decexam =\n      (Number(exams) / Number(examMark)) * (Number(examPercentage || 0) / 100);\n\n    let total = (Number(decexam + decclass) * 100).toFixed(0);\n    return total;\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work\n                <input\n                  className=\"form-control\"\n                  name=\"classworkMark\"\n                  type=\"number\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                Class Work ({classWorkPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam ({examPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Total 100%</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Grade</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <small>Interpretation</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Position</small>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                <small>Set</small>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getClassWorkPercentage(\n                          row?.classWork,\n                          classWorkPercentage,\n                          classworkMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getexamPercentage(\n                          row?.exam,\n                          examPercentage,\n                          examMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      {/* <small> {getTotal(row?.classWork, row?.exam)}</small> */}\n                      <small> {row?.total}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small> {getGrade(row?.classWork, row?.exam)}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small>\n                        {\" \"}\n                        {getInterpretation(row?.classWork, row?.exam)}\n                      </small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {\" \"}\n                      <small>{row?.position}</small>{\" \"}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn btn-sm\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ( out of {Number(classworkMark || 0)})\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(classworkMark || 0)}\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark (out of {Number(examMark || 0)})\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(examMark || 0)}\n            </span>\n          )}\n        </div>\n        {/* <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div> */}\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  selectYearGroup,\n  selectClasses,\n  selectCourses,\n} from \"../../../store/slices/schoolSlice\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\n\nfunction Search({\n  classID,\n  setclass,\n  loading,\n  term,\n  setterm,\n  academicYear,\n  setacademicYear,\n  course,\n  setcourse,\n  handleSearch,\n}) {\n  const classes = useSelector(selectClasses);\n  //const courses = useSelector(selectCourses);\n  const yearGroup = useSelector(selectYearGroup);\n  const [courses, setcourses] = useState();\n\n  const handleSelectClass = async (e) => {\n    setclass(e);\n    setcourse(\"\");\n    await axios.get(`courses/class/${e}`).then((res) => {\n      setcourses(\n        res.data.docs.map((i) => {\n          return {\n            code: i.code,\n            name: i.name,\n          };\n        })\n      );\n    });\n  };\n\n  return (\n    <form className=\"content__container col-8 mb-5\">\n      <h6>Search Class</h6>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"col-form-label\">\n          Class\n        </label>\n        <div className=\"\">\n          <select\n            name=\"academic-calendar\"\n            className=\"form-select\"\n            value={classID}\n            onChange={(e) => handleSelectClass(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.length > 0 ? (\n              classes.map((e) => (\n                <option key={e._id} value={e.classCode}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No classes yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      {classID && (\n        <>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Course\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={course}\n                onChange={(e) => setcourse(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {courses?.length > 0 ? (\n                  courses.map((e) => (\n                    <option key={e._id} value={e.code}>\n                      {e.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No courses yet for this class</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Academic Year\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={academicYear}\n                onChange={(e) => setacademicYear(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {yearGroup.length > 0 ? (\n                  yearGroup.map((e) => (\n                    <option key={e._id} value={e.year}>\n                      {e.year}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No data</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Term\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={term}\n                onChange={(e) => setterm(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n              </select>\n            </div>\n          </div>\n        </>\n      )}\n      <div className=\"\">\n        <div>\n          <button\n            onClick={handleSearch}\n            disabled={loading || !classID}\n            type=\"submit\"\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {\"Search\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  examPercentage,\n  setexamPercentage,\n  classWorkPercentage,\n  setclassWorkPercentage,\n  onSubmit,\n  classID,\n  loading,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  const handleClose = () => {\n    console.log(\"ndhou\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Set Percentages for Class {classID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Set ClassWork %</label>\n          <input\n            value={classWorkPercentage}\n            ref={register({ min: 0, max: 100 })}\n            onChange={(e) => setclassWorkPercentage(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">Exam %</label>\n          <input\n            value={examPercentage}\n            ref={register({ min: 0, max: 100 })}\n            onChange={(e) => setexamPercentage(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Save Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport Search from './Search';\nimport SBATable from './SbaTable';\nimport axios from '../../../store/axios';\nimport { errorAlert } from '../../../utils';\nimport Edit from './EditModal';\nimport SetPercentage from './SetPercentageModel';\n\nfunction SBA() {\n  const [data, setdata] = useState([]);\n  const [students, setstudents] = useState([]);\n  const [examMark, setexamMark] = useState('');\n  const [classWorkMark, setclassWorkMark] = useState('');\n  const [exam, setexam] = useState('');\n  const [classWork, setclassWork] = useState('');\n  const [position, setposition] = useState('');\n  const [openEdit, setopenEdit] = useState(false);\n  const [term, setterm] = useState('');\n  const [classID, setclassID] = useState('');\n  const [course, setcourse] = useState('');\n  const [year, setyear] = useState('');\n  const [isSet, setisSet] = useState(false);\n  const [selectedUser, setselectedUser] = useState({});\n  const [loadingClass, setloadingClass] = useState(false);\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n  const [examPercentage, setexamPercentage] = useState('');\n  const [openPercentage, setopenPercentage] = useState(false);\n  const [classWorkPercentage, setclassWorkPercentage] = useState('');\n\n  //setpercentage\n  const [newexamPercentage, setnewexamPercentage] = useState('');\n  const [newclassWorkPercentage, setnewclassWorkPercentage] = useState('');\n\n  const handleSearch = async e => {\n    setisSet(false);\n    setstudents([]);\n    setexamMark('');\n    setposition('');\n    setclassWorkMark('');\n    e.preventDefault();\n    if (classID === '' || term === '' || course === '' || year === '') {\n      return errorAlert('Please select all fields');\n    }\n    setloadingClass(true);\n    await axios.get(`/classes/classCode/${classID}`).then(async res => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        setloadingClass(false);\n        return errorAlert('SBA not set for this class');\n      }\n      setisSet(true);\n      await axios\n        .get(`/sba/${classID}/${course}/${year}/${term}`)\n        .then(result => {\n          setloadingClass(false);\n          let data = result.data.docs;\n          setdata(data);\n          setclassWorkMark(data?.classWork);\n          setexamMark(data?.exam);\n          setexamPercentage(data?.examPercentage);\n          setclassWorkPercentage(data?.classWorkPercentage);\n\n          let sortedStudents = data?.students?.sort((a, b) => {\n            return Number(b?.total || 0) - Number(a?.total || 0);\n          });\n          // setstudents(data?.students);\n          setstudents(sortedStudents);\n        });\n    });\n  };\n\n  const calculatePositions = arr => {\n    let sortedStudents = arr.sort((a, b) => {\n      return Number(b?.total || 0) - Number(a?.total || 0);\n    });\n\n    let results = sortedStudents.map((e, i) => {\n      return {\n        ...e,\n        position: i + 1,\n      };\n    });\n    return results;\n  };\n\n  const handleEdit = id => {\n    if (!classWorkMark) {\n      return errorAlert('Please set  classWork %');\n    }\n    if (!examMark) {\n      return errorAlert('Please set  exam score %');\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find(e => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const getClassWorkPercentage = mark => {\n    if (mark) {\n      let dec =\n        (Number(mark) / Number(classWorkMark)) *\n        (Number(classWorkPercentage) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = mark => {\n    if (mark) {\n      let dec =\n        (Number(mark) / Number(examMark)) * (Number(examPercentage) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (ex, cla) => {\n    let exammark = getexamPercentage(ex);\n    let classmark = getClassWorkPercentage(cla);\n    return Number(exammark) + Number(classmark);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n    let newData = students.map(i =>\n      i.userID === selectedUser.userID\n        ? {\n            classWork,\n            exam,\n            classWorkPercentage: getClassWorkPercentage(classWork),\n            examPercentage: getexamPercentage(exam),\n            total: getTotal(exam, classWork),\n            userID: selectedUser?.userID,\n            name: selectedUser?.name,\n          }\n        : i\n    );\n\n    console.log(newData);\n\n    let newStudents = calculatePositions(newData);\n\n    await axios\n      .put(`/sba/update/${data?._id}`, { students: newStudents })\n      .then(res => {\n        console.log(res.data);\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(newStudents);\n      });\n    // await axios\n    //   .put(`/sba/update/student/${data?._id}/${selectedUser?.userID}`, {\n    //     classWork,\n    //     exam,\n    //     classWorkPercentage: getClassWorkPercentage(classWork),\n    //     examPercentage: getexamPercentage(exam),\n    //     userID: selectedUser?.userID,\n    //     name: selectedUser?.name,\n    //     position,\n    //   })\n    //   .then((res) => {\n    //     setopenEdit(false);\n    //     setloadingSubmit(false);\n    //     setstudents(res.data.doc?.students);\n    //     console.log(res.data.doc?.students);\n    //   })\n    //   .catch((err) => {\n    //     errorAlert(\"Failed\");\n    //     setloadingSubmit(false);\n    //   });\n  };\n\n  const handleSetclasswork = e => {\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        classWork: e,\n      })\n      .then(() => setclassWorkMark(e));\n  };\n\n  const handleSetclassworkPercentage = e => {\n    setnewexamPercentage(100 - e);\n    setnewclassWorkPercentage(e);\n  };\n\n  const handleSetexamPercentage = e => {\n    setnewexamPercentage(e);\n    setnewclassWorkPercentage(100 - e);\n  };\n\n  const handleSetexam = e => {\n    console.log('click');\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        exam: e,\n      })\n      .then(() => setexamMark(e));\n  };\n\n  const handleOpenPercentage = () => {\n    setopenPercentage(true);\n    setnewclassWorkPercentage(classWorkPercentage);\n    setnewexamPercentage(examPercentage);\n  };\n\n  const handleSubmitPercentage = () => {\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        examPercentage: newexamPercentage,\n        classWorkPercentage: newclassWorkPercentage,\n      })\n      .then(() => {\n        setexamPercentage(newexamPercentage);\n        setclassWorkPercentage(newclassWorkPercentage);\n        setopenPercentage(false);\n      });\n  };\n\n  return (\n    <div>\n      <h3>S.B.A</h3>\n      <div className='mb-3'>\n        <Search\n          academicYear={year}\n          setacademicYear={setyear}\n          setterm={setterm}\n          term={term}\n          course={course}\n          setcourse={setcourse}\n          classID={classID}\n          setclass={setclassID}\n          loading={loadingClass}\n          handleSearch={handleSearch}\n        />\n      </div>\n      {isSet && (\n        <SBATable\n          setclassWork={setclassWork}\n          rows={students}\n          examMark={examMark}\n          setexamMark={handleSetexam}\n          classworkMark={classWorkMark}\n          setclassworkMark={handleSetclasswork}\n          handleEdit={handleEdit}\n          examPercentage={examPercentage}\n          classWorkPercentage={classWorkPercentage}\n          handleOpenPercentage={handleOpenPercentage}\n        />\n      )}\n\n      <Edit\n        name={selectedUser?.name}\n        userID={selectedUser?.userID}\n        exam={exam}\n        examMark={examMark}\n        classworkMark={classWorkMark}\n        classID={classID}\n        loading={loadingSubmit}\n        setposition={setposition}\n        position={position}\n        setexam={setexam}\n        setclassWork={setclassWork}\n        classWork={classWork}\n        open={openEdit}\n        onSubmit={handleonSubmit}\n        setOpen={setopenEdit}\n      />\n      <SetPercentage\n        open={openPercentage}\n        classID={classID}\n        setOpen={setopenPercentage}\n        examPercentage={newexamPercentage}\n        setexamPercentage={handleSetexamPercentage}\n        classWorkPercentage={newclassWorkPercentage}\n        setclassWorkPercentage={handleSetclassworkPercentage}\n        onSubmit={handleSubmitPercentage}\n      />\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}