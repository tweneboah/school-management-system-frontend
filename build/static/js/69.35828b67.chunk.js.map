{"version":3,"sources":["AdminComponents/finance/setfees/FeeForm.js","AdminComponents/finance/setfees/SetNewFees.js"],"names":["FeeForm","classID","loading","tution","settution","setfacility","facility","maintenance","setmaintenance","exam","setexam","setclass","type","settype","isEdit","onSubmit","classes","useSelector","selectClasses","useForm","register","handleSubmit","errors","className","action","ref","required","value","onChange","e","target","name","defaultValue","hidden","length","map","option","classCode","disabled","class","currentCurrency","min","onClick","role","aria-hidden","SetNewFees","useState","to","obj","results","day","freshDay","freshBorder","border","axios","post","then","a","res","data","error","errorAlert","successAlert","activity","user","catch","err"],"mappings":"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","file":"static/js/69.35828b67.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../../store/slices/schoolSlice\";\nimport { currentCurrency } from \"../../../utils\";\n\nfunction FeeForm({\n  classID,\n  loading,\n  tution,\n  settution,\n  setfacility,\n  facility,\n  maintenance,\n  setmaintenance,\n  exam,\n  setexam,\n  setclass,\n  type,\n  settype,\n  isEdit,\n  onSubmit,\n}) {\n  ///const feesType = useSelector(selectFees);\n  const classes = useSelector(selectClasses);\n  const { register, handleSubmit, errors } = useForm();\n\n  return (\n    <div>\n      <form className=\"row content__container\" action=\"\">\n        {!isEdit && (\n          <>\n            <div className=\"col-md-10 mb-3\">\n              <label className=\"form-label\">Select Class</label>\n              <select\n                ref={register({ required: true })}\n                value={classID}\n                onChange={(e) => setclass(e.target.value)}\n                name=\"class\"\n                className=\"form-select\"\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {classes?.length > 0 ? (\n                  classes.map((option) => (\n                    <option key={option.classCode} value={option.classCode}>\n                      {option.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No data yet</option>\n                )}\n              </select>\n              {errors.class && (\n                <span className=\" form-error text-danger mb-2\">\n                  This field is required\n                </span>\n              )}\n            </div>\n            <div className=\"col-md-10 mb-3\">\n              <label className=\"form-label\">Select Type</label>\n              <select\n                value={type}\n                ref={register({ required: true })}\n                onChange={(e) => settype(e.target.value)}\n                name=\"type\"\n                className=\"form-select\"\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                <option value=\"border\">Border</option>\n                <option value=\"freshBorder\">Fresh Boarder</option>\n                <option value=\"day\">Day</option>\n                <option value=\"freshDay\">Fresh Day</option>\n              </select>\n              {errors.type && (\n                <span className=\" form-error text-danger mb-2\">\n                  This field is required\n                </span>\n              )}\n            </div>\n          </>\n        )}\n        <div className=\"col-md-10 mb-3\">\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Tution Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  ref={register({ min: 0 })}\n                  value={tution}\n                  onChange={(e) => settution(e.target.value)}\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"tution\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Facility User Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={facility}\n                  onChange={(e) => setfacility(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"facility\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Maintenance Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={maintenance}\n                  onChange={(e) => setmaintenance(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"maintenance\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Exam Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={exam}\n                  onChange={(e) => setexam(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"exam\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 md-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {isEdit ? \"Save Changes\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default FeeForm;\n","import React, { useState } from \"react\";\nimport FeeForm from \"./FeeForm\";\nimport axios from \"../../../store/axios\";\nimport { Link } from \"react-router-dom\";\nimport { errorAlert, successAlert } from \"../../../utils\";\n\nfunction SetNewFees() {\n  const [classID, setclass] = useState(\"\");\n  const [type, settype] = useState(\"\");\n  const [tution, settution] = useState(\"\");\n  const [facility, setfacility] = useState(\"\");\n  const [maintenance, setmaintenance] = useState(\"\");\n  const [exam, setexam] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (classID && type) {\n      var obj = {};\n      var results = {\n        tution,\n        facility,\n        maintenance,\n        exam,\n      };\n      if (type === \"day\") {\n        obj = {\n          day: results,\n        };\n      } else if (type === \"freshDay\") {\n        obj = {\n          freshDay: results,\n        };\n      } else if (type === \"freshBorder\") {\n        obj = {\n          freshBorder: results,\n        };\n      } else if (type === \"border\") {\n        obj = {\n          border: results,\n        };\n      } else {\n        return 0;\n      }\n      axios\n        .post(\"/fees/add\", { name: classID, ...obj })\n        .then(async (res) => {\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"successfully created\");\n          settution(\"\");\n          setfacility(\"\");\n          setmaintenance(\"\");\n          setclass(\"\");\n          setexam(\"\");\n          settype(\"\");\n          settution(\"\");\n          await axios.post(\"/activitylog/create\", {\n            activity: `fees for class ${classID}  was added`,\n            user: \"admin\",\n          });\n        })\n        .catch((err) => {\n          errorAlert(\"Error\");\n        });\n    } else {\n      errorAlert(\"Fill in all fields\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-end\">\n        <Link className=\"btn blue__btn\" to=\"/finance/fees\">\n          {\" \"}\n          View All Fees\n        </Link>\n      </div>\n      <h3>Set Fees</h3>\n      <FeeForm\n        tution={tution}\n        settution={settution}\n        setfacility={setfacility}\n        facility={facility}\n        maintenance={maintenance}\n        setmaintenance={setmaintenance}\n        exam={exam}\n        setexam={setexam}\n        classID={classID}\n        setclass={setclass}\n        type={type}\n        settype={settype}\n        onSubmit={handleSubmit}\n      />\n    </div>\n  );\n}\n\nexport default SetNewFees;\n"],"sourceRoot":""}