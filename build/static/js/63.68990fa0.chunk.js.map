{"version":3,"sources":["AdminComponents/academics/notes/NoteForm.js","TeachersComponents/academics/AddCourseNote.js"],"names":["NoteForm","props","useForm","register","handleSubmit","errors","useState","classes","setclasses","courses","setcourses","useEffect","axios","get","then","res","console","log","data","classID","setclass","subject","setsubject","topic","settopic","loading","handleAdd","handleReset","isEdit","role","setfile","notes","setnotes","className","action","value","onChange","e","target","name","selected","hidden","length","map","classCode","disabled","code","ref","required","type","rows","id","accept","file","onClick","aria-hidden","AddNote","user","useSelector","selectUser","setloading","useParams","handleAddNote","a","fileUrl","errorAlert","fileData","FormData","append","post","error","path","courseID","senderID","response","successAlert","handleResetNote","catch","err","files","size"],"mappings":"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","file":"static/js/63.68990fa0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../../store/axios\";\n\nfunction NoteForm(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [classes, setclasses] = useState([]);\n  const [courses, setcourses] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/classes\").then((res) => {\n      console.log(res.data);\n      setclasses(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios.get(\"/courses\").then((res) => {\n      console.log(res.data);\n      setcourses(res.data);\n    });\n  }, []);\n\n  let {\n    classID,\n    setclass,\n    subject,\n    setsubject,\n    topic,\n    settopic,\n    loading,\n    handleAdd,\n    handleReset,\n    isEdit,\n    role,\n    setfile,\n    notes,\n    setnotes,\n  } = props;\n\n  return (\n    <form className=\"row g-3\" action=\"\">\n      {role === \"admin\" && (\n        <>\n          <div className=\"col-md-6\">\n            <label className=\"form-label\">Select Class</label>\n            <select\n              value={classID}\n              onChange={(e) => setclass(e.target.value)}\n              name=\"class\"\n              className=\"form-select\"\n            >\n              <option selected hidden>\n                Choose...\n              </option>\n              {classes.length > 0 ? (\n                classes.map((e) => (\n                  <option value={e.classCode} key={e.classCode}>\n                    {e.name}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No classes available yet</option>\n              )}\n            </select>\n          </div>\n          <div className=\"col-md-6\">\n            <label className=\"form-label\">Select Subject</label>\n            <select\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}\n              name=\"class\"\n              className=\"form-select\"\n            >\n              <option selected hidden>\n                Choose...\n              </option>\n              {courses.length > 0 ? (\n                courses.map((e) => (\n                  <option value={e.code} key={e.code}>\n                    {e.name}\n                  </option>\n                ))\n              ) : (\n                <option disabled>No courses available yet</option>\n              )}\n            </select>\n          </div>\n        </>\n      )}\n\n      <div className=\"col-12\">\n        <label className=\"form-label\">Topic</label>\n        <input\n          value={topic}\n          ref={register({ required: true })}\n          onChange={(e) => settopic(e.target.value)}\n          type=\"text\"\n          className=\"form-control\"\n          name=\"topic\"\n        />\n        {errors.topic && (\n          <span className=\" form-error text-danger mb-2\">\n            This field is required\n          </span>\n        )}\n      </div>\n      <div className=\"col-12\">\n        <label className=\"form-label\">Notes</label>\n        <textarea\n          value={notes}\n          onChange={(e) => setnotes(e.target.value)}\n          rows={5}\n          className=\"form-control\"\n          id=\"topic\"\n        ></textarea>\n      </div>\n      <div className=\"col-12\">\n        <label className=\"form-label\">Upload file</label>\n        <input\n          type=\"file\"\n          accept=\".jpg,.jpeg,.png,.doc,.docx,.pdf, .zip\"\n          ref={register({ required: true })}\n          onChange={(e) => setfile(e)}\n          className=\"form-control\"\n          name=\"file\"\n        />\n        {errors.file && (\n          <span className=\" form-error text-danger mb-2\">\n            Please select file\n          </span>\n        )}\n      </div>\n      <div className=\"col-12\">\n        <button\n          onClick={handleSubmit(handleAdd)}\n          className=\"btn blue__btn mr-3\"\n        >\n          {loading && (\n            <span\n              className=\"spinner-border spinner-border-sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            ></span>\n          )}\n          {isEdit ? \"Save Changes\" : \"Add\"}\n        </button>\n        <button onClick={handleSubmit(handleReset)} className=\"btn orange__btn\">\n          Reset\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default NoteForm;\n","import React, { useState } from \"react\";\nimport AddForm from \"../../AdminComponents/academics/notes/NoteForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\nimport { useParams } from \"react-router-dom\";\n\nfunction AddNote() {\n  const [topic, settopic] = useState(\"\");\n  const [notes, setnotes] = useState(\"\");\n  const [file, setfile] = useState(\"\");\n  const user = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n  const { id, classID } = useParams();\n\n  const handleAddNote = async () => {\n    let fileUrl = \" \";\n    if (!file) {\n      return errorAlert(\"Please select file\");\n    }\n    setloading(true);\n    const fileData = new FormData();\n    fileData.append(\"photo\", file);\n    let data = await axios.post(\"/upload\", fileData, {});\n    if (data.error) {\n      return errorAlert(\"The file is too big\");\n    }\n    fileUrl = data?.path;\n\n    await axios\n      .post(\"/notes/create\", {\n        topic,\n        courseID: id,\n        classID,\n        notes,\n        file: fileUrl,\n        senderID: user?.id,\n      })\n      .then((response) => {\n        if (response.data.error) {\n          errorAlert(response.data.error);\n          setloading(false);\n          return 0;\n        }\n        successAlert(\"notes successfully added\");\n        setloading(false);\n        handleResetNote();\n      })\n\n      .catch((err) => {\n        console.log(err);\n        setloading(false);\n        errorAlert(\"File is too big\");\n      });\n  };\n\n  const handleResetNote = () => {\n    settopic(\"\");\n    setnotes(\"\");\n    setfile(\"\");\n  };\n\n  const handleSetFile = (e) => {\n    const selected = e.target.files[0];\n    if (selected?.size > 2000000) {\n      return errorAlert(\"image is too large\");\n    }\n    setfile(selected);\n  };\n\n  return (\n    <>\n      <div className=\"content__container mb-5\">\n        <h3>Add New Notes</h3>\n        <AddForm\n          topic={topic}\n          settopic={settopic}\n          file={file}\n          loading={loading}\n          handleReset={handleResetNote}\n          setfile={handleSetFile}\n          role={user?.role}\n          handleAdd={handleAddNote}\n          notes={notes}\n          setnotes={setnotes}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default AddNote;\n"],"sourceRoot":""}